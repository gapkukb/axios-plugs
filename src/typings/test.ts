/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/binbin/modelInfo": {
    /** 查询模特投票排行 */
    post: operations["modelInfoUsingPOST_7"];
  };
  "/binbin/test": {
    /** test */
    post: operations["testUsingPOST_7"];
  };
  "/bingoChatContent": {
    /** 返回聊天内容 */
    post: operations["bingoChatContentUsingPOST"];
  };
  "/bingoDay/missionStatus": {
    /** 用户任务状况和可用票数 */
    post: operations["missionStatusUsingPOST_7"];
  };
  "/bingoStream/followRemind": {
    /** 关注取关通知 */
    post: operations["followRemindUsingPOST"];
  };
  "/bingoStream/getFollowStreamer": {
    /** 获取最新关注主播 */
    post: operations["getFollowStreamerUsingPOST"];
  };
  "/bingoStream/getLiveStreamer": {
    /** 获取最新关注主播 */
    post: operations["getLiveStreamerUsingPOST"];
  };
  "/bingoStream/liveRemind": {
    /** 开关播通知 */
    post: operations["liveRemindUsingPOST"];
  };
  "/cancelLikeGame": {
    /** 取消喜欢游戏 */
    post: operations["cancelLikeGameUsingPOST"];
  };
  "/charity/charityEvens": {
    post: operations["charityEvensRequestUsingPOST"];
  };
  "/charity/charityVote": {
    post: operations["charityEvensVoteUsingPOST"];
  };
  "/chat/queryChatInfo": {
    /** 1.1 查询用户聊天室基础信息 */
    post: operations["queryChatInfoUsingPOST"];
  };
  "/front/siteinfo": {
    /** 前端常量接口 */
    post: operations["siteInfoUsingPOST"];
  };
  "/front/windowlist": {
    /** 前端弹窗列表接口 */
    post: operations["windowListUsingPOST"];
  };
  "/game/getColorGameStatistics": {
    /** 获取color game 在线人数和奖金池 */
    post: operations["getColorGameStatisticsUsingPOST_7"];
  };
  "/game/getLiveMonteStatistics": {
    /** 获取Livemonte 在线人数和奖金池 */
    post: operations["getLiveMonteStatisticsUsingPOST_7"];
  };
  "/game/getPulaPutiStatistics": {
    /** 获取Livepulaputi 在线人数和奖金池 */
    post: operations["getPulaPutiStatisticsUsingPOST_7"];
  };
  "/gameOnlineStatQuery": {
    /** 进厅统计-查询 */
    post: operations["gameOnlineStatQueryUsingPOST"];
  };
  "/gameZoneSwitch": {
    /** GLI环境需求，新增环境常量开关 */
    post: operations["gameZoneSwitchUsingPOST"];
  };
  "/getHomeGameData": {
    /** getHomeGameData 首页游戏桌台数据 */
    post: operations["homeGameDataUsingPOST"];
  };
  "/h5game/getBingoInfo": {
    /** getBingoInfo 旧接口,为兼容app旧版本保留一段时间 */
    post: operations["getBingoInfoUsingPOST"];
  };
  "/health": {
    /** 服务可用性检测 */
    get: operations["healthUsingGET"];
  };
  "/inGameReport": {
    /** 进厅统计 */
    post: operations["inGameReportUsingPOST"];
  };
  "/likeGame": {
    /** 点击喜欢游戏 */
    post: operations["likeGameUsingPOST"];
  };
  "/lottery/queryJackPot": {
    /** bingoNight jackPot 中奖数据 */
    post: operations["getJackPotDataUsingPOST"];
  };
  "/lottery/queryWinner": {
    /** getBingoNightWinner bingoNight 中奖数据 */
    post: operations["getBingoNightWinnerUsingPOST"];
  };
  "/noticeInfo": {
    /** 动态表单notice接口 */
    post: operations["noticeInfoUsingPOST"];
  };
  "/queryGameRanking": {
    /** 查询绑定玩家的游戏数据 */
    post: operations["queryGameRankingUsingPOST"];
  };
  "/queryUserGameAlsoLike": {
    /** 查询玩家you may also like的游戏类型 */
    post: operations["queryUserGameAlsoLikeUsingPOST"];
  };
  "/queryUserGameInfo": {
    /** 查询绑定玩家的游戏数据 */
    post: operations["queryUserGameInfoUsingPOST"];
  };
  "/queryUserGameInfoApplet": {
    /** 查询绑定玩家的游戏数据 */
    post: operations["queryUserGameInfoAppletUsingPOST"];
  };
  "/queryUserGameInfoV2": {
    /** 查询绑定玩家的游戏数据 */
    post: operations["queryUserGameInfoV2UsingPOST"];
  };
  "/saba/articleStatistics": {
    /** 文章统计功能 */
    post: operations["articleStatisticsUsingPOST"];
  };
  "/saba/bobetStreamingNotification": {
    /** bobet推流/斷流通知 */
    post: operations["bobetStreamingNotificationUsingPOST"];
  };
  "/saba/getBobetSwitch": {
    /** getBobet开关 */
    post: operations["getBobetSwitchUsingPOST"];
  };
  "/saba/protoBufSwitch": {
    /** protoBuf开关 */
    post: operations["protoBufSwitchUsingPOST"];
  };
  "/saba/queryCrossMarketingMatch": {
    /** 交叉營銷首頁資料 */
    post: operations["queryCrossMarketingMatchUsingPOST"];
  };
  "/saba/queryMatchesBySportType": {
    /** 获取某项类别下多个赛事 */
    post: operations["queryMatchesBySportTypeUsingPOST_1"];
  };
  "/saba/queryMatchesLive": {
    /** 获取SP、疾风、bo的正在进行中的视频 */
    post: operations["queryMatchesLiveUsingPOST_1"];
  };
  "/saba/querySabaBalance": {
    /** 查询SABA余额 */
    post: operations["querySabaBalanceUsingPOST"];
  };
  "/saba/querySabaBetList": {
    /** 获取投注记录List */
    post: operations["querySabaBetRecordsUsingPOST"];
  };
  "/saba/querySabaBetRecord": {
    /** 获取投注记录 */
    post: operations["querySabaBetRecordUsingPOST"];
  };
  "/saba/querySelectionDetail": {
    /** 查询单个盘口中key详情 */
    post: operations["querySelectionDetailUsingPOST"];
  };
  "/saba/querySelectionDetailV2": {
    /** 新版查询单个盘口中key详情 */
    post: operations["querySelectionDetailV2UsingPOST"];
  };
  "/saba/querySingleMatchMarketList": {
    /** 查询单个比赛下所有盘口数据 */
    post: operations["querySingleMatchMarketListUsingPOST"];
  };
  "/saba/querySingleMatchMarketListV2": {
    /** 新版查询单个比赛下所有盘口数据 */
    post: operations["querySingleMatchMarketListV2UsingPOST_1"];
  };
  "/saba/querySingleMatchMarketListV2ProtoBuf": {
    /** 新版查询单个比赛下所有盘口数据 */
    post: operations["querySingleMatchMarketListV2ProtoBufUsingPOST_1"];
  };
  "/saba/querySportGames": {
    /** 获取球类IN-PLAY和TODAY比赛场次数量 */
    post: operations["querySportGamesUsingPOST_1"];
  };
  "/saba/querySportTypeInfo": {
    /** 首页all sport */
    post: operations["querySportTypeInfoUsingPOST"];
  };
  "/saba/queryTop2Match": {
    /** 查询首页top2比赛数据 */
    post: operations["queryTop2MatchUsingPOST"];
  };
  "/saba/queryTop5Match": {
    /** 查询首页top5比赛数据 */
    post: operations["queryTop5MatchUsingPOST"];
  };
  "/saba/sabaDoPlaceBet": {
    /** SABA投注下单 */
    post: operations["sabaDoPlaceBetUsingPOST"];
  };
  "/saba/updateBobetSwitch": {
    /** bobet开关 */
    post: operations["updateBobetSwitchUsingPOST"];
  };
  "/saba/updateCustomerOddsType": {
    /** 修改用户盘口类型 */
    post: operations["updateCustomerOddsTypeUsingPOST"];
  };
  "/saba/updatePbaStreamingMatchId": {
    /** PBA視頻流比賽ID修改 */
    post: operations["updatePbaStreamingMatchIdUsingPOST"];
  };
  "/sabaCombo/comboBetToSaba": {
    /** combo下注接口 */
    post: operations["comboBetToSabaUsingPOST"];
  };
  "/sabaCombo/queryCartComboDetail": {
    /** 查询多个盘口中key详情 */
    post: operations["queryCartComboDetailUsingPOST"];
  };
  "/sabaCombo/queryComboSelectionDetail": {
    /** 查询多个combo盘口中key详情 */
    post: operations["queryComboSelectionDetailUsingPOST"];
  };
  "/sabaCombo/queryMatchesBySportType": {
    /** 获取某项类别下多个赛事 */
    post: operations["queryMatchesBySportTypeUsingPOST"];
  };
  "/sabaCombo/queryMatchesLive": {
    /** 获取SP、疾风、bo的正在进行中的视频 */
    post: operations["queryMatchesLiveUsingPOST"];
  };
  "/sabaCombo/querySabaComboBetRecord": {
    /** 获取Combo投注记录 */
    post: operations["querySabaComboBetRecordUsingPOST"];
  };
  "/sabaCombo/querySingleMatchMarketListV2": {
    /** 新版查询单个比赛下所有盘口数据 */
    post: operations["querySingleMatchMarketListV2UsingPOST"];
  };
  "/sabaCombo/querySingleMatchMarketListV2ProtoBuf": {
    /** 新版查询单个比赛下所有盘口数据 */
    post: operations["querySingleMatchMarketListV2ProtoBufUsingPOST"];
  };
  "/sabaCombo/querySportGames": {
    /** 获取球类IN-PLAY和TODAY比赛场次数量 */
    post: operations["querySportGamesUsingPOST"];
  };
  "/siteMaintenance": {
    /** 全站维护接口 */
    post: operations["siteMaintenanceUsingPOST"];
  };
  "/sports/fibaPlayoff/lives": {
    /** 获取正在直播的比赛 get the live match for today */
    post: operations["queryLiveMatchesUsingPOST"];
  };
  "/sports/fibaPlayoff/matchs": {
    /** 根据日期获取比赛 get the matches for search day */
    post: operations["queryMatchesUsingPOST"];
  };
  "/sports/fibaPlayoff/teams": {
    /** 获取所有季后赛队伍 all playoffs teams */
    post: operations["teamsUsingPOST"];
  };
  "/sports/fibaPlayoff/todayMatchs": {
    /** 获取今天的比赛 get the matches for today */
    post: operations["queryTodayMatchesUsingPOST"];
  };
  "/sports/nbaPlayoff/lives": {
    /** 获取正在直播的比赛 get the live match for today */
    post: operations["queryLiveMatchesUsingPOST_1"];
  };
  "/sports/nbaPlayoff/matchs": {
    /** 根据日期获取比赛 get the matches for search day */
    post: operations["queryMatchesUsingPOST_1"];
  };
  "/sports/nbaPlayoff/teams": {
    /** 获取所有季后赛队伍 all playoffs teams */
    post: operations["teamsUsingPOST_1"];
  };
  "/sports/nbaPlayoff/todayMatchs": {
    /** 获取今天的比赛 get the matches for today */
    post: operations["queryTodayMatchesUsingPOST_1"];
  };
  "/updatePlayLogInfo": {
    /** 更新玩家玩过的缓存游戏数据 */
    post: operations["updatePlayLogInfoUsingPOST"];
  };
}

export interface definitions {
  /** AbnormalOdds */
  AbnormalOdds: {
    /**
     * Format: int32
     * @description 盤口ID
     * @example 30678
     */
    market_id?: number;
    /**
     * Format: double
     * @description 最小賠率
     * @example 30678
     */
    min_odds?: number;
  };
  /** AbnormalPayout */
  AbnormalPayout: {
    /**
     * Format: int32
     * @description 盤口ID
     * @example 30678
     */
    market_id?: number;
  };
  /**
   * ArticleStatisticsReq
   * @description 文章统计MODEL
   */
  ArticleStatisticsReq: {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /** Format: int32 */
    id: number;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
  };
  /** BaseReq */
  BaseReq: {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
  };
  /** BaseRsp */
  BaseRsp: {
    body?: { [key: string]: unknown };
    /** @description 响应错误码，返回错误类型 */
    resultCode?: string;
    /** @description 响应提示，返回提示信息 */
    resultDesc?: string;
  };
  /** BaseRsp«BingoInfoRsp» */
  "BaseRsp«BingoInfoRsp»": {
    body?: definitions["BingoInfoRsp"];
    /** @description 响应错误码，返回错误类型 */
    resultCode?: string;
    /** @description 响应提示，返回提示信息 */
    resultDesc?: string;
  };
  /** BaseRsp«Chat» */
  "BaseRsp«Chat»": {
    body?: definitions["Chat"];
    /** @description 响应错误码，返回错误类型 */
    resultCode?: string;
    /** @description 响应提示，返回提示信息 */
    resultDesc?: string;
  };
  /** BaseRsp«JSONArray» */
  "BaseRsp«JSONArray»": {
    body?: { [key: string]: unknown }[];
    /** @description 响应错误码，返回错误类型 */
    resultCode?: string;
    /** @description 响应提示，返回提示信息 */
    resultDesc?: string;
  };
  /** BaseRsp«JSONObject» */
  "BaseRsp«JSONObject»": {
    body?: { [key: string]: { [key: string]: unknown } };
    /** @description 响应错误码，返回错误类型 */
    resultCode?: string;
    /** @description 响应提示，返回提示信息 */
    resultDesc?: string;
  };
  /** BaseRsp«UserGameInfo» */
  "BaseRsp«UserGameInfo»": {
    body?: definitions["UserGameInfo"];
    /** @description 响应错误码，返回错误类型 */
    resultCode?: string;
    /** @description 响应提示，返回提示信息 */
    resultDesc?: string;
  };
  /** BaseRsp«boolean» */
  "BaseRsp«boolean»": {
    body?: boolean;
    /** @description 响应错误码，返回错误类型 */
    resultCode?: string;
    /** @description 响应提示，返回提示信息 */
    resultDesc?: string;
  };
  /** BasketBallLiveScore */
  BasketBallLiveScore: {
    /** Format: int32 */
    a1Q?: number;
    /** Format: int32 */
    a2Q?: number;
    /** Format: int32 */
    a3Q?: number;
    /** Format: int32 */
    a4Q?: number;
    /**
     * Format: int32
     * @description 客隊全場比分總和
     */
    aft?: number;
    /**
     * Format: int32
     * @description 客隊上半場比分總和
     */
    aht?: number;
    /** Format: int32 */
    h1Q?: number;
    /** Format: int32 */
    h2Q?: number;
    /** Format: int32 */
    h3Q?: number;
    /** Format: int32 */
    h4Q?: number;
    /**
     * Format: int32
     * @description 主隊全場比分總和
     */
    hft?: number;
    /**
     * Format: int32
     * @description 主隊上半場比分總和
     */
    hht?: number;
    /**
     * Format: int32
     * @description 目前进行的节数
     */
    llp?: number;
    /** Format: int32 */
    overTimeA?: number;
    /** Format: int32 */
    overTimeH?: number;
  };
  /** BingoInfoReq */
  BingoInfoReq: {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * Format: int32
     * @description 是否返回bet 排行, 0 否 1 是 默认值 0
     */
    incBet?: number;
    /**
     * Format: int32
     * @description 是否返回桌台列表, 0 否 1 是 默认值 1
     */
    incTable?: number;
    /**
     * Format: int32
     * @description 是否返回win 排行, 0 否 1 是 默认值 1
     */
    incWin?: number;
    /**
     * Format: int32
     * @description 是否返回winner 排行, 0 否 1 是 默认值 0
     */
    incWinnerList?: number;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
    /**
     * Format: int32
     * @description 排行榜数量,最大20条,默认10条
     */
    rankPageSize?: number;
  };
  /** BingoInfoRsp */
  BingoInfoRsp: {
    /** @description 全局 bet 排行 */
    betRank?: definitions["TableRankRsp"][];
    /** @description 桌台列表 */
    tableList?: definitions["TableDetailRsp"][];
    /**
     * Format: int32
     * @description 总人数
     */
    totalPlayers?: number;
    /** @description 全局 win 排行 */
    winRank?: definitions["TableRankRsp"][];
    /** @description 全局 winner 排行 */
    winnerRank?: definitions["WinnerRankRsp"][];
  };
  /**
   * BobetStreamingNotificationReq
   * @description 視頻流推流斷流通知
   */
  BobetStreamingNotificationReq: {
    /**
     * @description 應用名稱
     * @example live
     */
    app?: string;
    /**
     * @description 事件通知簽名
     * @example ff3b2bxxx5cfd56e76d72bed4c4aa2dxxxca8c2e46467d205a6417d4fc
     */
    auth_sign?: string;
    /**
     * Format: int64
     * @description 簽名過期時間戳
     * @example 1587954140
     */
    auth_timestamp?: number;
    /**
     * @description 推流客戶端ip
     * @example 100.xxx.xx.90
     */
    client_ip?: string;
    /**
     * @description 推流域名
     * @example push.example.com
     */
    domain?: string;
    /**
     * @description 推流或斷流
     * @example PUBLISH/PUBLISH_DONE
     */
    event?: string;
    /**
     * @description 接受流的節點IP
     * @example 112.xx.xxx.218
     */
    node_ip?: string;
    /**
     * Format: int64
     * @description 推流斷流Unix時間戳
     * @example 1587954134
     */
    publish_timestamp?: number;
    /**
     * @description 流名稱
     * @example PBA/NBA
     */
    stream?: string;
    /**
     * @description 推流/斷流參數
     * @example pri=90
     */
    user_args?: string;
  };
  /** CharityEventsReq */
  CharityEventsReq: {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /** Format: int64 */
    id?: number;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /** Format: int32 */
    pageNum?: number;
    /** Format: int32 */
    pageSize?: number;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
  };
  /** Chat */
  Chat: {
    /** @description bingoMega 聊天实时内容 */
    bingoMegaChat?: { [key: string]: unknown };
    /** @description bingoRush 聊天实时内容 */
    bingoRushChat?: { [key: string]: unknown };
  };
  /** ChatContent */
  ChatContent: {
    /**
     * @description 聊天内容
     * @example C66
     */
    content?: string;
    /**
     * @description 登录名
     * @example C66
     */
    loginName?: string;
    /**
     * @description 昵称
     * @example C66
     */
    nickName?: string;
    /**
     * @description 时间 格式（yyyy-MM-DD hh:mm:ss）
     * @example C66
     */
    time?: string;
    /**
     * Format: int32
     * @description 用户VIP等级
     * @example 1
     */
    vip?: number;
  };
  /** ChatInfoResp */
  ChatInfoResp: {
    /** Format: int64 */
    banEndTime?: number;
    /** Format: int64 */
    banStartTime?: number;
    /** Format: int32 */
    banStatus?: number;
    /** Format: int64 */
    banTime?: number;
    chatRoomStatus?: string;
    loginName?: string;
  };
  /** ChatReq */
  ChatReq: {
    /**
     * @description 玩家用户名
     * @example bingopluslwejkr2
     */
    loginName?: string;
    /**
     * @description 产品编号
     * @example C66
     */
    productId?: string;
  };
  /** ChatRoomReq */
  ChatRoomReq: {
    /**
     * @description 聊天室Id
     * @example 30678
     */
    chatRoomId?: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
    /**
     * @description 體育Id
     * @example 1
     */
    sportTypeId?: string;
  };
  /** CombosBean */
  CombosBean: {
    /** @description 賠率清單 */
    abnormal_odds_list?: definitions["AbnormalOdds"][];
    /** Format: int32 */
    bet_count?: number;
    /**
     * @description combo類型
     * @example 3
     */
    combo_type: string;
    /**
     * @description combo類型名稱
     * @example Double
     */
    combo_type_display_name: string;
    /**
     * Format: double
     * @description 最大投注
     * @example 200
     */
    max_bet: number;
    /**
     * Format: double
     * @description 最小投注
     * @example 30
     */
    min_bet: number;
    /**
     * Format: double
     * @description 賠率
     * @example 2
     */
    odds: number;
    /**
     * Format: double
     * @description payout
     */
    payout_rate?: number;
  };
  /** CommonResponse«GiGcResponse«SabaPlaceParlayBetRsp»» */
  "CommonResponse«GiGcResponse«SabaPlaceParlayBetRsp»»": {
    /** Format: int32 */
    code?: number;
    data?: definitions["GiGcResponse«SabaPlaceParlayBetRsp»"];
    msg?: string;
  };
  /** CommonResponse«GiGcResponse«投注前檢查接口返回Model»» */
  "CommonResponse«GiGcResponse«投注前檢查接口返回Model»»": {
    /** Format: int32 */
    code?: number;
    data?: definitions["GiGcResponse«投注前檢查接口返回Model»"];
    msg?: string;
  };
  /** CommonResponse«List«SabaMarketRsp»» */
  "CommonResponse«List«SabaMarketRsp»»": {
    /** Format: int32 */
    code?: number;
    data?: definitions["SabaMarketRsp"][];
    msg?: string;
  };
  /** CommonResponse«List«SabaMatchBySportLiveRsp»» */
  "CommonResponse«List«SabaMatchBySportLiveRsp»»": {
    /** Format: int32 */
    code?: number;
    data?: definitions["SabaMatchBySportLiveRsp"][];
    msg?: string;
  };
  /** CommonResponse«List«SabaMatchBySportRsp»» */
  "CommonResponse«List«SabaMatchBySportRsp»»": {
    /** Format: int32 */
    code?: number;
    data?: definitions["SabaMatchBySportRsp"][];
    msg?: string;
  };
  /** CommonResponse«List«SportTypeGamesRsp»» */
  "CommonResponse«List«SportTypeGamesRsp»»": {
    /** Format: int32 */
    code?: number;
    data?: definitions["SportTypeGamesRsp"][];
    msg?: string;
  };
  /** CommonResponse«PageModel«SABACombo投注记录响应MODEL»» */
  "CommonResponse«PageModel«SABACombo投注记录响应MODEL»»": {
    /** Format: int32 */
    code?: number;
    data?: definitions["PageModel«SABACombo投注记录响应MODEL»"];
    msg?: string;
  };
  /** CommonResponse«SabaMarketDetailListRsp» */
  "CommonResponse«SabaMarketDetailListRsp»": {
    /** Format: int32 */
    code?: number;
    data?: definitions["SabaMarketDetailListRsp"];
    msg?: string;
  };
  /** CurrentCombosBean */
  CurrentCombosBean: {
    abnormal_odds_list?: definitions["AbnormalOdds"][];
    abnormal_payout_list?: definitions["AbnormalPayout"][];
    /**
     * Format: int32
     * @description 投注數
     */
    bet_count?: number;
    /**
     * Format: double
     * @description 串關賠率
     */
    combo_price?: number;
    /** @description 串關種類 */
    combo_type?: string;
    /**
     * Format: int32
     * @description 最大投注限额
     */
    max_bet?: number;
    /**
     * Format: int32
     * @description 金額
     */
    stake?: number;
  };
  /** GameEntity */
  GameEntity: {
    appGroup?: string;
    createBy?: string;
    /** Format: date-time */
    createDate?: string;
    currency?: string;
    exCode?: string;
    /** Format: int32 */
    featureType?: number;
    /** Format: int32 */
    flag?: number;
    gameDesc?: string;
    /** Format: int32 */
    gameFree?: number;
    gameHotValue?: string;
    gameId?: string;
    gameImage?: string;
    gameImageBig?: string;
    gameLastAmount?: string;
    /** Format: date-time */
    gameLastDate?: string;
    gameSupplier?: string;
    /** Format: int32 */
    gameType?: number;
    /** Format: int32 */
    highFlag?: number;
    /** Format: int32 */
    hotFlag?: number;
    /** Format: int64 */
    id?: number;
    /** Format: int32 */
    isUpHot?: number;
    jackpotId?: string;
    jsonParam?: string;
    lastUpdateBy?: string;
    /** Format: date-time */
    lastUpdateDate?: string;
    /** Format: int32 */
    maxWinMultiple?: number;
    nameEn?: string;
    nameZh?: string;
    /** Format: int32 */
    newFlag?: number;
    /** Format: int32 */
    payLine?: number;
    /** Format: int32 */
    payoutFlag?: number;
    platformId?: string;
    /** Format: int32 */
    playerType?: number;
    /** Format: int32 */
    poolFlag?: number;
    /** Format: int32 */
    popularity?: number;
    /** Format: int32 */
    preferenceType?: number;
    productId?: string;
    /** Format: date-time */
    publishDate?: string;
    /** Format: int32 */
    recommendType?: number;
    /** Format: int32 */
    searchRecFlag?: number;
    serverGameId?: string;
    /** Format: int32 */
    sortNo?: number;
    tipsName?: string;
    /** Format: int32 */
    tryFlag?: number;
    typeUrl?: string;
  };
  /** GameLikeRsp */
  GameLikeRsp: {
    /** @description 游戏类型扩展字段 */
    exCode?: string;
    /**
     * Format: int32
     * @description 游戏状态[0:关厅; 1:开厅]
     */
    flag?: number;
    /**
     * Format: int32
     * @description 是否冷门[1:是; 0:否]
     */
    gameFree?: number;
    /** @description 热度值 */
    gameHotValue?: string;
    /** @description 游戏编号 */
    gameId?: string;
    /** @description 游戏图片 */
    gameImage?: string;
    /** @description 游戏大图片 */
    gameImageBig?: string;
    /**
     * @description 游戏大类[1:体育,2:电投,3:真人,5:电游,7:棋牌,8:捕鱼,9:电竞,12:彩票]
     * @example 5
     */
    gameKind: string;
    /** @description 游戏名称 */
    gameName?: string;
    /** @description 游戏名称英文 */
    gameNameEn?: string;
    /**
     * Format: int32
     * @description 游戏类型
     */
    gameType?: number;
    /**
     * Format: int32
     * @description 热门标志[1:是; 0:否]
     */
    hotFlag?: number;
    /**
     * Format: int32
     * @description 收藏标志[1:是; 0:否]
     */
    isFavorite?: number;
    /**
     * Format: int32
     * @description 热度是否上升[0:其他,1:上升,-1下降]
     */
    isUpHot?: number;
    /** @description 游戏奖金池数额 */
    jackpotValue?: number;
    /** @description json参数 */
    jsonParam?: string;
    /**
     * Format: int32
     * @description 游戏维护状态[1:维护中; 0:没有维护]
     */
    maintenanceFlag?: number;
    /**
     * Format: int32
     * @description 最大赢钱倍数
     */
    maxWinMultiple?: number;
    /**
     * Format: int32
     * @description 最新标志[1:是; 0:否]
     */
    newFlag?: number;
    /**
     * Format: int32
     * @description 赔付线
     */
    payLine?: number;
    /**
     * Format: int32
     * @description 是否高派彩[1:是; 0:否]
     */
    payoutFlag?: number;
    /** @description 平台编码 */
    platformCode?: string;
    /** @description 平台名称 */
    platformName?: string;
    /**
     * Format: int32
     * @description 玩家类型
     */
    playerType?: number;
    /**
     * Format: int32
     * @description 奖池标志[1:是; 0:否]
     */
    poolFlag?: number;
    /**
     * Format: int32
     * @description 人气值
     */
    popularity?: number;
    /**
     * Format: int32
     * @description 特惠标识[1:是; 0:否]
     */
    preferenceFlag?: number;
    /**
     * Format: int32
     * @description 推荐标识[1:是; 0:否]
     */
    recommendFlag?: number;
    /** @description 游戏的RTP百分比<br/>RTP */
    rtp?: string;
    /** @description 服务器游戏ID */
    serverGameId?: string;
    /**
     * Format: int32
     * @description 展示区域
     */
    showArea?: number;
    /**
     * Format: int64
     * @description 加入时机
     */
    time?: number;
    /**
     * Format: int32
     * @description 是否支持试玩[0:不支持; 1:支持]
     */
    tryFlag?: number;
    /** @description 电游AG厅游戏平台类型或漫威奖金池地址 */
    typeUrl?: string;
  };
  /** GameLogRsp */
  GameLogRsp: {
    /** @description 游戏类型扩展字段 */
    exCode?: string;
    /**
     * Format: int32
     * @description 游戏状态[0:关厅; 1:开厅]
     */
    flag?: number;
    /**
     * Format: int32
     * @description 是否冷门[1:是; 0:否]
     */
    gameFree?: number;
    /** @description 热度值 */
    gameHotValue?: string;
    /** @description 游戏编号 */
    gameId?: string;
    /** @description 游戏图片 */
    gameImage?: string;
    /** @description 游戏大图片 */
    gameImageBig?: string;
    /**
     * @description 游戏大类[1:体育,2:电投,3:真人,5:电游,7:棋牌,8:捕鱼,9:电竞,12:彩票]
     * @example 5
     */
    gameKind: string;
    /** @description 游戏名称 */
    gameName?: string;
    /** @description 游戏名称英文 */
    gameNameEn?: string;
    /**
     * Format: int64
     * @description 游戏次数
     */
    gameTimes?: number;
    /**
     * Format: int32
     * @description 游戏类型
     */
    gameType?: number;
    /**
     * Format: int32
     * @description 热门标志[1:是; 0:否]
     */
    hotFlag?: number;
    /** @description 最后游戏时间 */
    inGameTime?: string;
    /**
     * Format: int32
     * @description 收藏标志[1:是; 0:否]
     */
    isFavorite?: number;
    /**
     * Format: int32
     * @description 热度是否上升[0:其他,1:上升,-1下降]
     */
    isUpHot?: number;
    /** @description 游戏奖金池数额 */
    jackpotValue?: number;
    /** @description json参数 */
    jsonParam?: string;
    /**
     * Format: int32
     * @description 游戏维护状态[1:维护中; 0:没有维护]
     */
    maintenanceFlag?: number;
    /**
     * Format: int32
     * @description 最大赢钱倍数
     */
    maxWinMultiple?: number;
    /**
     * Format: int32
     * @description 最新标志[1:是; 0:否]
     */
    newFlag?: number;
    /**
     * Format: int32
     * @description 赔付线
     */
    payLine?: number;
    /**
     * Format: int32
     * @description 是否高派彩[1:是; 0:否]
     */
    payoutFlag?: number;
    /** @description 平台编码 */
    platformCode?: string;
    /** @description 平台名称 */
    platformName?: string;
    /**
     * Format: int32
     * @description 玩家类型
     */
    playerType?: number;
    /**
     * Format: int32
     * @description 奖池标志[1:是; 0:否]
     */
    poolFlag?: number;
    /**
     * Format: int32
     * @description 人气值
     */
    popularity?: number;
    /**
     * Format: int32
     * @description 特惠标识[1:是; 0:否]
     */
    preferenceFlag?: number;
    /**
     * Format: int32
     * @description 推荐标识[1:是; 0:否]
     */
    recommendFlag?: number;
    /** @description 游戏的RTP百分比<br/>RTP */
    rtp?: string;
    /** @description 服务器游戏ID */
    serverGameId?: string;
    /**
     * Format: int32
     * @description 展示区域
     */
    showArea?: number;
    /**
     * Format: int32
     * @description 是否支持试玩[0:不支持; 1:支持]
     */
    tryFlag?: number;
    /** @description 电游AG厅游戏平台类型或漫威奖金池地址 */
    typeUrl?: string;
  };
  /** GameRankingReq */
  GameRankingReq: {
    /**
     * Format: int32
     * @description 过去几天
     * @example 2
     */
    days?: number;
    /**
     * @description 游戏ID
     * @example threehandholdem
     */
    gameId?: string;
    /**
     * @description 游戏大类
     * @example bingo,slot,poker
     */
    gameKind?: string;
    /**
     * @description 游戏平台ID
     * @example 052
     */
    platformId?: string;
    /**
     * @description 产品ID
     * @example C66
     */
    productId?: string;
  };
  /** GameReq */
  GameReq: {
    /**
     * @description 游戏ID
     * @example threehandholdem
     */
    gameId?: string;
    /**
     * @description 游戏大类
     * @example bingo,slot,poker
     */
    gameKind?: string;
    /**
     * @description 玩家用户名
     * @example abc
     */
    loginName?: string;
    /**
     * @description 游戏平台ID
     * @example 052
     */
    platformId?: string;
    /**
     * @description 产品ID
     * @example C66
     */
    productId?: string;
  };
  /** GetParlayTicketsPriceInfo */
  GetParlayTicketsPriceInfo: {
    /** Format: int32 */
    bet_type?: number;
    /** Format: double */
    current_price?: number;
    key?: string;
    /** Format: int32 */
    live_away_score?: number;
    /** Format: int32 */
    live_home_score?: number;
    /** Format: int32 */
    market_id?: number;
    /** Format: int32 */
    odds_type?: number;
    /** Format: double */
    point?: number;
    /** Format: int32 */
    sport_type?: number;
    /** Format: int32 */
    state_code?: number;
    state_message?: string;
    status?: string;
  };
  /**
   * GiGcBalanceRsp
   * @description saba返回余额MODEL
   */
  GiGcBalanceRsp: {
    /**
     * @description available==true时，balance的取值有效 ; available==false 表示余额获取失败
     * @example true
     */
    available?: boolean;
    /**
     * @description 余额
     * @example 50
     */
    balance?: number;
  };
  /** GiGcDoPlaceBetRsp */
  GiGcDoPlaceBetRsp: {
    /** Format: int32 */
    betAcceptSec?: number;
    /** Format: int32 */
    betError?: number;
    betErrorMsg?: string;
    /** Format: double */
    betPrice?: number;
    /** Format: int32 */
    betStatus?: number;
    betTypeName?: string;
    /** Format: double */
    currentPrice?: number;
    /** Format: double */
    maxBet?: number;
    /** Format: double */
    minBet?: number;
    /** Format: double */
    point?: number;
    stake?: number;
    ticketStatus?: string;
    /** Format: int64 */
    transID?: number;
    transIDStr?: string;
  };
  /** GiGcResponse«SabaPlaceParlayBetRsp» */
  "GiGcResponse«SabaPlaceParlayBetRsp»": {
    /** Format: int32 */
    code?: number;
    data?: definitions["SabaPlaceParlayBetRsp"];
    msg?: string;
    success?: boolean;
  };
  /** GiGcResponse«投注前檢查接口返回Model» */
  "GiGcResponse«投注前檢查接口返回Model»": {
    /** Format: int32 */
    code?: number;
    data?: definitions["投注前檢查接口返回Model"];
    msg?: string;
    success?: boolean;
  };
  /** InGameReq */
  InGameReq: {
    /**
     * @description 附加参数[AGQJ进厅附加参数, 格式必须是key1=value1&key2=value2]
     * @example videoID=B001
     */
    additionalParams?: string;
    /**
     * @description 是否厅方APP，默认情况是“空”
     * @example 1
     */
    appFlag?: string;
    /**
     * @description 回调路径[AGQJ/AGSTAR回调路径，WEB端(PC&H5)注意不要携带域名]
     * @example agqjPage.html
     */
    callbackPath?: string;
    /**
     * @description 会员的输入图形验证码[极速开户，需要验证码时必填]
     * @example 12345
     */
    captcha?: string;
    /**
     * @description 图形验证码编号, 生成图形码接口返回此ID[极速开户，需要验证码时必填]
     * @example c34d23bd0fdd4f79ae6f7815412681e1
     */
    captchaId?: string;
    customerId?: string;
    /**
     * @description divName
     * @example pngCasinoGame
     */
    divName?: string;
    /**
     * @description 接入配置标识符
     * @example B01003
     */
    gameCode: string;
    /**
     * @description 游戏编号
     * @example 5018
     */
    gameId: string;
    /**
     * @description 厅方额外活动入口
     * @example 1
     */
    gameInOth?: string;
    /**
     * @description 游戏大类[通过优惠系统进游戏时需要传入][1:体育,2:电投,3:真人,5:电游,7:棋牌,8:捕鱼,9:电竞,12:彩票]
     * @example 5
     */
    gameKind?: string;
    /**
     * @description 游戏名称
     * @example 齐天大圣
     */
    gameName?: string;
    /**
     * @description 游戏类型
     * @example 1
     */
    gameType: string;
    /**
     * Format: int32
     * @description 是否记录进游戏日志[0-记录]
     * @example 1
     */
    inclLog?: number;
    /**
     * @description 是否转账[0:否，1:是]，默认情况是“是”
     * @example 1
     */
    isWithTransfer?: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * @description 盘口
     * @example 00001
     */
    oddsType?: string;
    /**
     * @description 传入到GI的游戏币种
     * @example USDT
     */
    platformCurrency?: string;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
    /**
     * @description 多房间厅模式
     * @example bingo tbgo fbgo
     */
    roomType?: string;
    /**
     * @description 是否试玩:true 是,false 否
     * @example false
     */
    tryOut?: string;
    /**
     * @description 是否垂直APP，默认情况是“空”
     * @example 1
     */
    verticalApp?: string;
    /**
     * @description 是否试玩:true 是,false 否
     * @example false
     */
    videoId?: string;
  };
  /** LocalTime */
  LocalTime: {
    /** Format: int32 */
    hour?: number;
    /** Format: int32 */
    minute?: number;
    /** Format: int32 */
    nano?: number;
    /** Format: int32 */
    second?: number;
  };
  /** Mono«string» */
  "Mono«string»": { [key: string]: unknown };
  /** PageModel«SABACombo投注记录响应MODEL» */
  "PageModel«SABACombo投注记录响应MODEL»": {
    /** @description 返回数据集[无数据时不返回或返回空数组] */
    data?: definitions["SABACombo投注记录响应MODEL"][];
    /**
     * Format: int32
     * @description 当前页[默认1]
     */
    pageNo?: number;
    /**
     * Format: int32
     * @description 每页显示条数[默认20]
     */
    pageSize?: number;
    /**
     * Format: int32
     * @description 总页数[默认0]
     */
    totalPage?: number;
    /**
     * Format: int32
     * @description 总行数[默认0]
     */
    totalRow?: number;
  };
  /** PageModel«SABA投注记录响应MODEL» */
  "PageModel«SABA投注记录响应MODEL»": {
    /** @description 返回数据集[无数据时不返回或返回空数组] */
    data?: definitions["SABA投注记录响应MODEL"][];
    /**
     * Format: int32
     * @description 当前页[默认1]
     */
    pageNo?: number;
    /**
     * Format: int32
     * @description 每页显示条数[默认20]
     */
    pageSize?: number;
    /**
     * Format: int32
     * @description 总页数[默认0]
     */
    totalPage?: number;
    /**
     * Format: int32
     * @description 总行数[默认0]
     */
    totalRow?: number;
  };
  /** ParlayTicketsMatch */
  ParlayTicketsMatch: {
    /** @description 投注key */
    key?: string;
    /** @description 語種 */
    language?: string;
    /**
     * Format: int32
     * @description 盤口ID
     */
    market_id?: number;
    /**
     * Format: double
     * @description 球頭
     */
    point?: number;
    /**
     * Format: int32
     * @description 球種
     */
    sport_type?: number;
  };
  /** ParlayTicketsPrepare */
  ParlayTicketsPrepare: {
    /** @description 盤口清單 */
    matches?: definitions["ParlayTicketsMatch"][];
  };
  /**
   * PbaStreamingMatchIdUpdateReq
   * @description PBA當前視頻流比賽id修改
   */
  PbaStreamingMatchIdUpdateReq: {
    /**
     * @description 賽事id
     * @example 79472721
     */
    matchId?: string;
    /**
     * @description 密鑰
     * @example 2pGe4f
     */
    password?: string;
  };
  /** PriceInfoBean */
  PriceInfoBean: {
    /** @description 客队 ID */
    awayName?: string;
    /** @description 投注類型 */
    betType?: string;
    /** @description 投注類型名稱 */
    betTypeName?: string;
    /**
     * Format: double
     * @description 投注賠率
     */
    bet_price?: number;
    /**
     * Format: int32
     * @description 投注类型 ID
     */
    bet_type?: number;
    /**
     * Format: double
     * @description 投注当下实时赔率
     */
    current_price?: number;
    /**
     * Format: int32
     * @description 赛事 ID
     */
    eventId?: number;
    /** @description 主队 ID */
    homeName?: string;
    /** @description key */
    key?: string;
    /** @description key名稱 */
    keyEn?: string;
    /**
     * Format: int32
     * @description 联赛 ID
     */
    leagueId?: number;
    /** @description 联赛 */
    leagueName?: string;
    /**
     * Format: int32
     * @description 客队得分
     */
    live_away_score?: number;
    /**
     * Format: int32
     * @description 主队得分
     */
    live_home_score?: number;
    /**
     * Format: int32
     * @description 盘口 ID
     */
    market_id?: number;
    /**
     * Format: date-time
     * @description 比賽時間
     */
    matchDate?: string;
    /**
     * Format: int32
     * @description 盘口类型
     */
    odds_type?: number;
    /**
     * Format: double
     * @description 球头
     */
    point?: number;
    /**
     * Format: int32
     * @description 体育项目 ID
     */
    sport_type?: number;
    /**
     * Format: int32
     * @description 该串关选择的状态代码
     */
    state_code?: number;
    /** @description 该串关选择的状态消息 */
    state_message?: string;
    /** @description 盘口状态 */
    status?: string;
  };
  /** QueryMissionStatusReq */
  QueryMissionStatusReq: {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * Format: int32
     * @description 当期页数（从1开始）
     * @example 1
     */
    pageNum?: number;
    /**
     * Format: int32
     * @description 每页条数（最大5000）
     * @example 50
     */
    pageSize?: number;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
  };
  /** Request params for streamer */
  "Request params for streamer": {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description customer login name
     * @example bingoplusxxx
     */
    loginName?: string;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
    /**
     * Format: int64
     * @description timestamp
     * @example 1794328907
     */
    timestamp?: number;
  };
  /** Response */
  Response: { [key: string]: unknown };
  /** Response«BingoInfoRsp» */
  "Response«BingoInfoRsp»": { [key: string]: unknown };
  /** Response«ChatInfoResp» */
  "Response«ChatInfoResp»": { [key: string]: unknown };
  /** Response«GiGcBalanceRsp» */
  "Response«GiGcBalanceRsp»": { [key: string]: unknown };
  /** Response«GiGcDoPlaceBetRsp» */
  "Response«GiGcDoPlaceBetRsp»": { [key: string]: unknown };
  /** Response«List«SABA投注记录响应MODEL»» */
  "Response«List«SABA投注记录响应MODEL»»": { [key: string]: unknown };
  /** Response«List«SabaFrontMenuRsp»» */
  "Response«List«SabaFrontMenuRsp»»": { [key: string]: unknown };
  /** Response«List«SabaMarketDetailListRsp»» */
  "Response«List«SabaMarketDetailListRsp»»": { [key: string]: unknown };
  /** Response«List«SabaMatchBySportLiveRsp»» */
  "Response«List«SabaMatchBySportLiveRsp»»": { [key: string]: unknown };
  /** Response«List«SabaMatchBySportRsp»» */
  "Response«List«SabaMatchBySportRsp»»": { [key: string]: unknown };
  /** Response«List«SabaMatchRsp»» */
  "Response«List«SabaMatchRsp»»": { [key: string]: unknown };
  /** Response«List«SportNbaPlayoffLiveRsp»» */
  "Response«List«SportNbaPlayoffLiveRsp»»": { [key: string]: unknown };
  /** Response«List«SportNbaPlayoffMatchRsp»» */
  "Response«List«SportNbaPlayoffMatchRsp»»": { [key: string]: unknown };
  /** Response«List«SportNbaPlayoffTeamRsp»» */
  "Response«List«SportNbaPlayoffTeamRsp»»": { [key: string]: unknown };
  /** Response«List«SportTypeGamesRsp»» */
  "Response«List«SportTypeGamesRsp»»": { [key: string]: unknown };
  /** Response«PageModel«SABA投注记录响应MODEL»» */
  "Response«PageModel«SABA投注记录响应MODEL»»": { [key: string]: unknown };
  /** Response«SabaMarketDetailListRsp» */
  "Response«SabaMarketDetailListRsp»": { [key: string]: unknown };
  /** Response«Set«object»» */
  "Response«Set«object»»": { [key: string]: unknown };
  /** Response«SingleMarketSelectionRsp» */
  "Response«SingleMarketSelectionRsp»": { [key: string]: unknown };
  /** Response«boolean» */
  "Response«boolean»": { [key: string]: unknown };
  /** Response«string» */
  "Response«string»": { [key: string]: unknown };
  /** Response«在播主播列表» */
  "Response«在播主播列表»": { [key: string]: unknown };
  /** SABACombo投注记录响应MODEL */
  SABACombo投注记录响应MODEL: {
    /**
     * @description 客队名称  [required = true]
     * @example Bodo Glimt
     */
    awayName?: string;
    /**
     * Format: int32
     * @description 等待秒数
     * @example 50
     */
    betAcceptSec?: number;
    /**
     * @description 下注金额  [required = true]
     * @example 3000
     */
    betAmount?: number;
    /**
     * Format: double
     * @description 赔率  [required = true]
     * @example 0.554
     */
    betPrice?: number;
    /**
     * Format: int32
     * @description 下注状态 0 下注成功 1 Failed 下注失败 2 Pending 未知状况。如果遇到此一情况，请呼叫 CheckPlaceBetAPI 再次确认状况。  [required = true]
     * @example 1
     */
    betStatus?: number;
    /**
     * @description 投注类型
     * @example 1
     */
    betType?: string;
    /**
     * @description 投注类型名稱
     * @example 1
     */
    betTypeName?: string;
    /**
     * Format: int64
     * @description 创建时间  [required = true]
     * @example 347623741
     */
    createTime?: number;
    /**
     * @description 币种 [required = true]
     * @example PHP
     */
    currency?: string;
    /** @description 串關資料 */
    currentCombos?: definitions["CurrentCombosBean"][];
    /**
     * Format: double
     * @description 盘口当下的赔率  [required = true]
     * @example 0.554
     */
    currentPrice?: number;
    /**
     * Format: int64
     * @description 赛事ID  [required = true]
     * @example 61245641
     */
    eventId?: number;
    /**
     * @description 主队名称  [required = true]
     * @example Sarpsborg 08
     */
    homeName?: string;
    /**
     * Format: int32
     * @description 是否串关注单
     */
    isParlayBet?: number;
    /**
     * Format: int32
     * @description 是否派彩结算 0 未结算 未派彩 1 结算 派彩 2重新结算派彩  [required = true]
     * @example 1
     */
    isPayout?: number;
    /** @description 投注类型中的key */
    key?: string;
    /** @description 盤口名稱 */
    keyEn?: string;
    /**
     * Format: int64
     * @description 联赛ID
     * @example 61245641
     */
    leagueId?: number;
    /**
     * @description 联赛名称  [required = true]
     * @example 61245641
     */
    leagueName?: string;
    /** Format: int64 */
    luckyTransId?: number;
    /**
     * Format: int64
     * @description 盘口ID  [required = true]
     * @example 61245641
     */
    marketId?: number;
    /**
     * Format: date-time
     * @description 比赛时间
     */
    matchDate?: string;
    /**
     * Format: double
     * @description 最大投注限额  [required = true]
     * @example 50000
     */
    maxBet?: number;
    /**
     * Format: double
     * @description 最小投注限额  [required = true]
     * @example 20
     */
    minBet?: number;
    /**
     * Format: int32
     * @description 盘口类型 3:欧洲盘 2:香港盘)
     * @example 3,2
     */
    oddsType?: number;
    /**
     * @description 主键ID  [required = true]
     * @example 123456
     */
    orderId?: string;
    /**
     * @description 平台ID  [required = true]
     * @example 131
     */
    platformId?: string;
    /**
     * Format: double
     * @description 球头
     * @example 7.5
     */
    point?: number;
    /** @description 賠率資料 */
    priceInfo?: definitions["PriceInfoBean"][];
    /**
     * @description 产品 默认C66  [required = true]
     * @example C66
     */
    productId?: string;
    /**
     * Format: int64
     * @description 结算时间
     * @example 5634523415435435
     */
    settleTime?: number;
    /** @description 注单資料 */
    singleTickets?: definitions["SingleTicket"][];
    /**
     * Format: int64
     * @description 系統ID
     */
    sysTransId?: number;
    /**
     * @description 注单状态half won / half lose / won/ lose / void / running /draw / reject / refund /waiting)  [required = true]
     * @example running
     */
    ticketStatus?: string;
    /**
     * @description 交易ID  [required = true]
     * @example 914875234123413
     */
    transId?: string;
    /**
     * Format: int64
     * @description 更新时间
     * @example 343425436
     */
    updateTime?: number;
    /**
     * @description 登录名  [required = true]
     * @example bingoplus3jg321
     */
    username?: string;
    /**
     * @description 输赢金额  [required = true]
     * @example 500
     */
    winLossAmount?: string;
  };
  /** SABA投注MODEL */
  SABA投注MODEL: {
    /** @description 投注選項 */
    bet?: definitions["SabaBetReq"];
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
    /** @description 厂商标识符 */
    vendor_id?: string;
    /** @description 厂商会员标识符 */
    vendor_member_id?: string;
  };
  /** SABA投注记录响应MODEL */
  SABA投注记录响应MODEL: {
    /**
     * @description 客队名称  [required = true]
     * @example Bodo Glimt
     */
    awayName?: string;
    /**
     * Format: int32
     * @description 等待秒数
     * @example 50
     */
    betAcceptSec?: number;
    /**
     * @description 下注金额  [required = true]
     * @example 3000
     */
    betAmount?: number;
    /**
     * Format: double
     * @description 赔率  [required = true]
     * @example 0.554
     */
    betPrice?: number;
    /**
     * Format: int32
     * @description 下注状态 0 下注成功 1 Failed 下注失败 2 Pending 未知状况。如果遇到此一情况，请呼叫 CheckPlaceBetAPI 再次确认状况。  [required = true]
     * @example 1
     */
    betStatus?: number;
    /**
     * @description 投注类型
     * @example 1
     */
    betType?: string;
    /**
     * @description 投注类型名稱
     * @example 1
     */
    betTypeName?: string;
    /**
     * Format: int64
     * @description 创建时间  [required = true]
     * @example 347623741
     */
    createTime?: number;
    /**
     * @description 币种 [required = true]
     * @example PHP
     */
    currency?: string;
    currentCombos?: definitions["CurrentCombosBean"][];
    /**
     * Format: double
     * @description 盘口当下的赔率  [required = true]
     * @example 0.554
     */
    currentPrice?: number;
    /**
     * Format: int64
     * @description 赛事ID  [required = true]
     * @example 61245641
     */
    eventId?: number;
    /**
     * @description 主队名称  [required = true]
     * @example Sarpsborg 08
     */
    homeName?: string;
    /**
     * Format: int32
     * @description 是否串关注单)
     * @example 3,2
     */
    isParlayBet?: number;
    /**
     * Format: int32
     * @description 是否派彩结算 0 未结算 未派彩 1 结算 派彩 2重新结算派彩  [required = true]
     * @example 1
     */
    isPayout?: number;
    /** @description 投注类型中的key */
    key?: string;
    /** @description 盤口名稱 */
    keyEn?: string;
    /**
     * Format: int64
     * @description 联赛ID
     * @example 61245641
     */
    leagueId?: number;
    /**
     * @description 联赛名称  [required = true]
     * @example 61245641
     */
    leagueName?: string;
    /**
     * @description 交易ID  [required = true]
     * @example 914875234123413
     */
    luckyTransId?: string;
    /**
     * Format: int64
     * @description 盘口ID  [required = true]
     * @example 61245641
     */
    marketId?: number;
    /**
     * Format: date-time
     * @description 比赛时间
     */
    matchDate?: string;
    /**
     * Format: double
     * @description 最大投注限额  [required = true]
     * @example 50000
     */
    maxBet?: number;
    /**
     * Format: double
     * @description 最小投注限额  [required = true]
     * @example 20
     */
    minBet?: number;
    /**
     * Format: int32
     * @description 盘口类型 3:欧洲盘 2:香港盘)
     * @example 3,2
     */
    oddsType?: number;
    /**
     * @description 主键ID  [required = true]
     * @example 123456
     */
    orderId?: string;
    /**
     * @description 平台ID  [required = true]
     * @example 131
     */
    platformId?: string;
    /**
     * Format: double
     * @description 球头
     * @example 7.5
     */
    point?: number;
    priceInfo?: definitions["PriceInfoBean"][];
    /**
     * @description 产品 默认C66  [required = true]
     * @example C66
     */
    productId?: string;
    /**
     * Format: int64
     * @description 结算时间
     * @example 5634523415435435
     */
    settleTime?: number;
    singleTickets?: definitions["SingleTicket"][];
    /**
     * @description 系統交易ID  [required = true]
     * @example 914875234123413
     */
    sysTransId?: string;
    /**
     * @description 注单状态half won / half lose / won/ lose / void / running /draw / reject / refund /waiting)  [required = true]
     * @example running
     */
    ticketStatus?: string;
    /**
     * @description 交易ID  [required = true]
     * @example 914875234123413
     */
    transId?: string;
    /**
     * Format: int64
     * @description 更新时间
     * @example 343425436
     */
    updateTime?: number;
    /**
     * @description 登录名  [required = true]
     * @example bingoplus3jg321
     */
    username?: string;
    /**
     * @description 输赢金额  [required = true]
     * @example 500
     */
    winLossAmount?: string;
  };
  /** SABA投注记录请求 */
  SABA投注记录请求: {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
    /**
     * @description 注单id
     * @example 11212121
     */
    transId?: string;
    /**
     * @description 用户名
     * @example apple
     */
    userName?: string;
  };
  /** SABA投注记录请求MODEL */
  SABA投注记录请求MODEL: {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 结束投注时间
     * @example 2023-04-04 21:00:00
     */
    endBetTime?: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * Format: int32
     * @description 页码[若不传，则默认1]
     * @example 1
     */
    pageNo?: number;
    /**
     * Format: int32
     * @description 每页显示条数[若不传，则默认20]
     * @example 10
     */
    pageSize?: number;
    /**
     * Format: int32
     * @description 是否派彩结算 0 未结算 未派彩 1 结算 派彩 2重新结算派彩
     * @example 1
     */
    payOut?: number;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
    /**
     * @description 开始投注时间
     * @example 2023-04-01 20:00:00
     */
    startBetTime?: string;
    /**
     * @description 交易ID
     * @example 184160153187123260
     */
    transId?: string;
  };
  /**
   * SabaAllPriceRsp
   * @description 不同盘口的赔率
   */
  SabaAllPriceRsp: {
    decimalPrice?: number;
    hongKongPrice?: number;
    /** Format: int32 */
    oddRange?: number;
  };
  /** SabaBetCombos */
  SabaBetCombos: {
    /** @description combo類型 */
    combo_type?: string;
    /** @description 金額 */
    stake?: number;
  };
  /** SabaBetMatchesReq */
  SabaBetMatchesReq: {
    /** @description 客隊名稱 */
    awayName?: string;
    /** @description 投注類型 */
    betType?: string;
    /** @description 投注類型名稱 */
    betTypeName?: string;
    /**
     * Format: int32
     * @description 賽事Id
     */
    eventId?: number;
    /** @description 主隊名稱 */
    homeName?: string;
    /** @description 投注类型与选项 */
    key?: string;
    /** @description 投注細項名稱 */
    keyEn?: string;
    /**
     * Format: int32
     * @description 聯賽Id
     */
    leagueId?: number;
    /** @description 聯賽名稱 */
    leagueName?: string;
    /**
     * Format: int32
     * @description 盤口ID
     */
    market_id?: number;
    /**
     * Format: date-time
     * @description 比賽時間
     */
    matchDate?: string;
    /**
     * Format: double
     * @description 球头
     */
    point?: number;
    /**
     * Format: double
     * @description 赔率
     */
    price?: number;
    /**
     * Format: int32
     * @description 體育類型
     */
    sport_type?: number;
  };
  /** SabaBetReq */
  SabaBetReq: {
    /** @description 投注清單 */
    bet_combos?: definitions["SabaBetCombos"][];
    /** @description 賽事清單 */
    bet_matches?: definitions["SabaBetMatchesReq"][];
    /** @description 用戶IP */
    client_ip?: string;
    /**
     * Format: int32
     * @description 欧洲盘，香港盘
     */
    oddsType?: number;
    /**
     * Format: int32
     * @description 自動接受
     */
    parlay_odds_option?: number;
    /**
     * Format: int64
     * @description 注單ID
     */
    vendor_trans_id?: number;
  };
  /**
   * SabaDoPlaceBetReq
   * @description 投注下单MODEL
   */
  SabaDoPlaceBetReq: {
    /**
     * @description 投注类型
     * @example 1
     */
    betType: string;
    /**
     * Format: int32
     * @description 聊天室ID
     * @example 654542747
     */
    chatRoomId: number;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 可参考附件-投注类型与选项对照表
     * @example h
     */
    key: string;
    /**
     * @description 联赛ID
     * @example 654542747002
     */
    leagueId: string;
    /**
     * @description 联赛名称
     * @example 654542747002
     */
    leagueName: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * Format: int32
     * @description 盘口Id
     * @example 518783802
     */
    marketId: number;
    /**
     * Format: int32
     * @description 比赛ID
     * @example 654542747
     */
    matchId: number;
    /**
     * @description 用户昵称
     * @example 654542747
     */
    nickName: string;
    /**
     * Format: byte
     * @description 下注选项 0: 不接受盘口变更(预设)1: 只接受更好赔率2: 接受任何赔率
     * @example 1000
     */
    oddsOption?: string;
    /**
     * Format: int32
     * @description 盘口类型 3:欧洲盘 2:香港盘
     * @example 2
     */
    oddsType?: number;
    /**
     * Format: double
     * @description 球头GetEventsAndMarkets没有返回此字段时，请传入 0
     * @example 0
     */
    point: number;
    /**
     * Format: double
     * @description 赔率
     * @example -4.5
     */
    price: number;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
    /**
     * Format: int32
     * @description 体育项目Id
     * @example 43
     */
    sportTypeId: number;
    /**
     * @description 投注金额
     * @example 1000
     */
    stake: number;
  };
  /**
   * SabaFrontMenuRsp
   * @description sport 页面的体育类型和赛事 MODEL
   */
  SabaFrontMenuRsp: {
    /**
     * Format: int32
     * @description SABA赛事场次 [required = true]
     * @example 354
     */
    games?: number;
    /**
     * @description 体育ID [required = true]
     * @example 1
     */
    sportTypeId?: string;
    /**
     * @description 体育名称 [required = true]
     * @example football
     */
    sportTypeName?: string;
  };
  /**
   * SabaMarketDetailListRsp
   * @description 某场比赛下面所有盘口MODEL
   */
  SabaMarketDetailListRsp: {
    /**
     * Format: int32
     * @description 客队ID
     * @example 13111541
     */
    awayId?: number;
    /** @description 客队logo */
    awayLogo?: string;
    /**
     * @description 客队名称 [required = true]
     * @example Tromso
     */
    awayName: string;
    /** @description 籃球比賽小節比分 */
    basketBallLiveScore?: definitions["BasketBallLiveScore"];
    /** @description bobet流狀態 */
    bobetStreamingStatus?: string;
    bobetSwitch?: string;
    /** Format: int32 */
    commentary?: number;
    /**
     * @description dwanbyte视频开关 -1 关闭， 1开启 [required = true]
     * @example 1
     */
    dawnbyteStreamViewFlag: string;
    /**
     * @description 疾风 视频URL
     * @example http://dwanbyteview.com/TKSDFR-WEF8591
     */
    dawnbyteVideoUrl?: string;
    /**
     * @description 疾风 视频清單
     * @example 返回Json格式
     */
    dawnbyteVideoUrlList?: string;
    /**
     * @description 赛事状态running/closed/postponed/deleted   [required = true]
     * @example running
     */
    eventStatus: string;
    /**
     * Format: int32
     * @description 赛事有多少节
     */
    gameSession?: number;
    /**
     * Format: date-time
     * @description 开赛时间 [required = true]
     */
    globalShowTime: string;
    /**
     * Format: int32
     * @description 主队ID
     * @example 13111541
     */
    homeId?: number;
    /** @description 主队logo */
    homeLogo?: string;
    /**
     * @description 主队名称 [required = true]
     * @example Molde
     */
    homeName: string;
    /** @description 目前赛事时间 适用足球(1)/篮球(2)/美式足球(3)/冰上曲棍球(4) */
    inPlayTime?: string;
    /**
     * @description 目前比赛进行时间
     * @example 00:21:00
     */
    inPlayTime2: definitions["LocalTime"];
    /**
     * @description 联赛ID [required = true]
     * @example 5445186
     */
    leagueId: string;
    /** @description 联赛Logo */
    leagueLogo?: string;
    /**
     * @description 联队名称 [required = true]
     * @example ARGENTINA LIGA PROFESIONAL
     */
    leagueName: string;
    /**
     * Format: int32
     * @description 客场滚球分数 [required = true]
     * @example 230
     */
    liveAwayScore: number;
    /**
     * Format: int32
     * @description 主场滚球分数 [required = true]
     * @example 131
     */
    liveHomeScore: number;
    /**
     * Format: int32
     * @description 目前比赛进行到第几节
     * @example 1
     */
    livePeriod: number;
    markets?: definitions["SabaMarketGroupRsp"][];
    /**
     * Format: date
     * @description 比赛日期 [required = true]
     * @example 2022-12-01 [required = true]
     */
    matchDate: string;
    /**
     * @description 比赛ID [required = true]
     * @example 4545412121
     */
    matchId: string;
    /**
     * @description 比赛时间 [required = true]
     * @example 23:00:00
     */
    matchTime: definitions["LocalTime"];
    /** @description pba流狀態 */
    pbaStreamingStatus?: string;
    /** @description 排期中比赛状态：0:inplay (eventStatus=running, 比赛已经开始), 1:running (eventStatus=running，比赛还没开始) */
    runningStatus?: string;
    /**
     * @description saba视频开关 -1 关闭， 1开启 [required = true]
     * @example 1
     */
    sabaStreamViewFlag: string;
    /**
     * @description SABA 视频URL
     * @example http://sabayurl.com/TKSDFR-WEF8591
     */
    sabaVideoUrl?: string;
    /**
     * Format: int32
     * @description 排序
     */
    sort?: number;
    /**
     * @description 体育类型ID [required = true]
     * @example 1
     */
    sportTypeId: string;
    /**
     * @description 体育类型名称 [required = true]
     * @example football [required = true]
     */
    sportTypeName: string;
    /**
     * Format: int32
     * @description 视频来源 1:Dwanbyte 2:SABA 3:both, 如果null 是没有视频
     * @example 2
     */
    streamSource?: number;
    streamsId?: string;
    /** @description 網球比賽詳情 */
    tennisBallLiveScore?: definitions["TennisBallLiveScore"];
    /**
     * Format: int32
     * @description 玩法总数量
     * @example 52
     */
    totalBetTypeNumber: number;
    tothirdparty?: string;
    /** @description 排球比賽小節比分 */
    volleyBallLiveScore?: definitions["VolleyBallLiveScore"];
  };
  /**
   * SabaMarketGroupRsp
   * @description 盘口分组后信息MODEL
   */
  SabaMarketGroupRsp: {
    /** @description 投注选项组的名称 */
    betSelectionGroupNames?: string[];
    /**
     * Format: int32
     * @description 投注选项组的数量，对应UI投注选项的列
     */
    betSelectionGroupNumber?: number;
    /**
     * Format: int32
     * @description 投注类型，参考文档OddsFeed_ch.pdf 238页 [required = true]
     * @example 1
     */
    betType: number;
    /**
     * @description 投注类型，参考文档OddsFeed_ch.pdf 238页 [required = true]
     * @example 1
     */
    betTypeName: string;
    /**
     * Format: int32
     * @description 1
     */
    gameMap?: number;
    /** @description 盘口数据 */
    marketDataList?: definitions["SabaMarketRsp"][];
  };
  /**
   * SabaMarketRsp
   * @description 沙巴盘口响应Model
   */
  SabaMarketRsp: {
    /**
     * Format: int32
     * @description 投注类型，参考文档OddsFeed_ch.pdf 238页 [required = true]
     * @example 1
     */
    betType: number;
    /**
     * Format: int32
     * @description 投注类型分类0: None (主要)
     * 1: FullTime (全场)
     * 2: Half (半场)
     * 3: Corners (角球)/Bookings (罚牌)
     * 4: Intervals (区间)
     * 5: Specials (特别产品)
     * 6: Players (选手)
     * 7: FastMarket (快速盘口)
     * 8: Quarter (节)
     * 9: ExtraTime (加时)
     * 10: Penalty (点球)
     * 11~40: E-Sports Map 1~30 (电子竞
     * 技适用 – 地图 1~30)
     *   [required = true]
     * @example 0
     */
    category: number;
    /** Format: int32 */
    combo?: number;
    /**
     * Format: int32
     * @description 当 SportType = 43 电子竞技BetType >= 9001 且 betType <=9100,会回传该值否则隐藏。例：Map 3 First Blood.
     * @example 4
     */
    gameMap?: number;
    /**
     * Format: int32
     * @description 当SportType = 43电子竞技BetType= 9007,9011,9027,9062,9068,9070,9071, 9072, 9073, 9077,会回传该值否则隐藏。例：Map 3 First Tier 1 Turret
     * @example 3
     */
    gameRound?: number;
    /**
     * Format: int32
     * @description 盘口ID [required = true]
     * @example 509878154
     */
    marketId: number;
    /**
     * @description running 盘口开启且可下注 suspend 盘口赔率仍开启但无法下注 closePrice 盘口赔率关闭且无法下注 closed 盘口关闭且无法下注 [required = true]
     * @example running
     */
    marketStatus: string;
    /**
     * Format: int32
     * @description 當符合某些種類時回傳2(香港+歐洲) 不符合時回傳1(僅有歐洲)
     * @example 1
     */
    oddTypeCount?: number;
    /**
     * @description 资源 ID
     * @example 9007
     */
    resourceid?: string;
    /**
     * @description 玩法  [required = true]
     * @example 0
     */
    selections: definitions["SabaSelectionRsp"][];
    /**
     * @description 玩法  [required = true]
     * @example 0
     */
    selections2: definitions["SabaSelectionRsp"][];
    /**
     * @description 投注类型分类0: None (主要)
     * 1: FullTime (全场)
     * 2: Half (半场)
     * 3-1: Corners (角球)
     * 3-2: Bookings (罚牌)
     * 4: Intervals (区间)
     * 5: Specials (特别产品)
     * 6: Players (选手)
     * 7: FastMarket (快速盘口)
     * 8: Quarter (节)
     * 9: ExtraTime (加时)
     * 10: Penalty (点球)
     * 11~40: E-Sports Map 1~30 (电子竞
     * 技适用 – 地图 1~30)
     * 此字段不支持板球 [required = true]
     * @example 0
     */
    showCategory: string;
    /**
     * Format: int32
     * @description 针对投注类型 ID 1,3,7,8,219,220,401,402,475,476,477,478,486,487,701,704,705,3907,3908,3913 做排序. 如果有开多球头且为滚球赛事时,此字段会有值 [required = true]
     * @example 3908
     */
    sort: number;
  };
  /**
   * SabaMatchBySportLiveRsp
   * @description 比赛详情信息MODEL
   */
  SabaMatchBySportLiveRsp: {
    /**
     * Format: int32
     * @description 客队ID
     * @example 13111541
     */
    awayId?: number;
    /** @description 客队logo */
    awayLogo?: string;
    /**
     * @description 客队名称 [required = true]
     * @example Tromso
     */
    awayName: string;
    /**
     * @description dwanbyte视频开关 -1 关闭， 1开启 [required = true]
     * @example 1
     */
    dawnbyteStreamViewFlag: string;
    /**
     * @description 疾风 视频URL
     * @example http://dwanbyteview.com/TKSDFR-WEF8591
     */
    dawnbyteVideoUrl?: string;
    /**
     * @description 疾风 视频清單
     * @example 返回Json格式
     */
    dawnbyteVideoUrlList?: string;
    /**
     * @description 赛事状态running/closed/postponed/deleted   [required = true]
     * @example running
     */
    eventStatus: string;
    /**
     * Format: int32
     * @description 赛事有多少节
     */
    gameSession?: number;
    /**
     * Format: date-time
     * @description 开赛时间 [required = true]
     */
    globalShowTime: string;
    /**
     * Format: int32
     * @description 主队ID
     * @example 13111541
     */
    homeId?: number;
    /** @description 主队logo */
    homeLogo?: string;
    /**
     * @description 主队名称 [required = true]
     * @example Molde
     */
    homeName: string;
    /** @description 目前赛事时间 适用足球(1)/篮球(2)/美式足球(3)/冰上曲棍球(4) */
    inPlayTime?: string;
    /**
     * @description 目前比赛进行时间
     * @example 00:21:00
     */
    inPlayTime2: definitions["LocalTime"];
    /**
     * @description 联赛ID [required = true]
     * @example 5445186
     */
    leagueId: string;
    /** @description 联赛Logo */
    leagueLogo?: string;
    /**
     * @description 联队名称 [required = true]
     * @example ARGENTINA LIGA PROFESIONAL
     */
    leagueName: string;
    /**
     * Format: int32
     * @description 客场滚球分数 [required = true]
     * @example 230
     */
    liveAwayScore: number;
    /**
     * Format: int32
     * @description 主场滚球分数 [required = true]
     * @example 131
     */
    liveHomeScore: number;
    /**
     * Format: int32
     * @description 目前比赛进行到第几节
     * @example 1
     */
    livePeriod: number;
    /** @description 比赛下面盘口信息 */
    markets?: definitions["SabaMarketRsp"][];
    /**
     * Format: date
     * @description 比赛日期 [required = true]
     * @example 2022-12-01 [required = true]
     */
    matchDate: string;
    /**
     * @description 比赛ID [required = true]
     * @example 4545412121
     */
    matchId: string;
    /**
     * @description 比赛时间 [required = true]
     * @example 23:00:00
     */
    matchTime: definitions["LocalTime"];
    nbaVideoUrl?: string;
    /** @description 排期中比赛状态：0:inplay (eventStatus=running, 比赛已经开始), 1:running (eventStatus=running，比赛还没开始) */
    runningStatus?: string;
    /**
     * @description saba视频开关 -1 关闭， 1开启 [required = true]
     * @example 1
     */
    sabaStreamViewFlag: string;
    /**
     * @description SABA 视频URL
     * @example http://sabayurl.com/TKSDFR-WEF8591
     */
    sabaVideoUrl?: string;
    /**
     * Format: int32
     * @description 排序
     */
    sort?: number;
    /**
     * @description 体育类型ID [required = true]
     * @example 1
     */
    sportTypeId: string;
    /**
     * @description 体育类型名称 [required = true]
     * @example football [required = true]
     */
    sportTypeName: string;
    /**
     * Format: int32
     * @description 视频来源 1:Dwanbyte 2:SABA 3:both, 如果null 是没有视频
     * @example 2
     */
    streamSource?: number;
    streamsId?: string;
    /**
     * Format: int32
     * @description 玩法总数量
     * @example 52
     */
    totalBetTypeNumber: number;
    tothirdparty?: string;
  };
  /**
   * SabaMatchBySportRsp
   * @description 比赛详情信息MODEL
   */
  SabaMatchBySportRsp: {
    /**
     * Format: int32
     * @description 客队ID
     * @example 13111541
     */
    awayId?: number;
    /** @description 客队logo */
    awayLogo?: string;
    /**
     * @description 客队名称 [required = true]
     * @example Tromso
     */
    awayName: string;
    /** @description 籃球比賽小節比分 */
    basketBallLiveScore?: definitions["BasketBallLiveScore"];
    /** @description 0,1 */
    bobetStreamingStatus?: string;
    /** @description 0,1 */
    bobetSwitch?: string;
    /**
     * @description dwanbyte视频开关 -1 关闭， 1开启 [required = true]
     * @example 1
     */
    dawnbyteStreamViewFlag: string;
    /**
     * @description 疾风 视频URL
     * @example http://dwanbyteview.com/TKSDFR-WEF8591
     */
    dawnbyteVideoUrl?: string;
    /**
     * @description 疾风 视频清單
     * @example 返回Json格式
     */
    dawnbyteVideoUrlList?: string;
    /**
     * @description 赛事状态running/closed/postponed/deleted   [required = true]
     * @example running
     */
    eventStatus: string;
    /**
     * Format: int32
     * @description 赛事有多少节
     */
    gameSession?: number;
    /**
     * Format: date-time
     * @description 开赛时间 [required = true]
     */
    globalShowTime: string;
    /**
     * Format: int32
     * @description 主队ID
     * @example 13111541
     */
    homeId?: number;
    /** @description 主队logo */
    homeLogo?: string;
    /**
     * @description 主队名称 [required = true]
     * @example Molde
     */
    homeName: string;
    /** @description 目前赛事时间 适用足球(1)/篮球(2)/美式足球(3)/冰上曲棍球(4) */
    inPlayTime?: string;
    /**
     * @description 目前比赛进行时间
     * @example 00:21:00
     */
    inPlayTime2: definitions["LocalTime"];
    /**
     * @description 联赛ID [required = true]
     * @example 5445186
     */
    leagueId: string;
    /** @description 联赛Logo */
    leagueLogo?: string;
    /**
     * @description 联队名称 [required = true]
     * @example ARGENTINA LIGA PROFESIONAL
     */
    leagueName: string;
    /**
     * Format: int32
     * @description 客场滚球分数 [required = true]
     * @example 230
     */
    liveAwayScore: number;
    /**
     * Format: int32
     * @description 主场滚球分数 [required = true]
     * @example 131
     */
    liveHomeScore: number;
    /**
     * Format: int32
     * @description 目前比赛进行到第几节
     * @example 1
     */
    livePeriod: number;
    /** @description 比赛下面盘口信息 */
    markets?: definitions["SabaMarketRsp"][];
    /**
     * Format: date
     * @description 比赛日期 [required = true]
     * @example 2022-12-01 [required = true]
     */
    matchDate: string;
    /**
     * @description 比赛ID [required = true]
     * @example 4545412121
     */
    matchId: string;
    /**
     * @description 比赛时间 [required = true]
     * @example 23:00:00
     */
    matchTime: definitions["LocalTime"];
    /** @description 排期中比赛状态：0:inplay (eventStatus=running, 比赛已经开始), 1:running (eventStatus=running，比赛还没开始) */
    runningStatus?: string;
    /**
     * @description saba视频开关 -1 关闭， 1开启 [required = true]
     * @example 1
     */
    sabaStreamViewFlag: string;
    /**
     * @description SABA 视频URL
     * @example http://sabayurl.com/TKSDFR-WEF8591
     */
    sabaVideoUrl?: string;
    /**
     * Format: int32
     * @description 排序
     */
    sort?: number;
    /**
     * @description 体育类型ID [required = true]
     * @example 1
     */
    sportTypeId: string;
    /**
     * @description 体育类型名称 [required = true]
     * @example football [required = true]
     */
    sportTypeName: string;
    /**
     * Format: int32
     * @description 视频来源 1:Dwanbyte 2:SABA 3:both, 如果null 是没有视频
     * @example 2
     */
    streamSource?: number;
    /** @description bobet streamId */
    streamsId?: string;
    /** @description 網球比賽客場小節比分 */
    tennisAwayGameScore?: number[];
    /** @description 客队目前局数比分 */
    tennisAwayPointScore?: string;
    /**
     * Format: int32
     * @description 目前发球队伍(1=主队 2=客队)
     */
    tennisCurrentServe?: number;
    /**
     * Format: int32
     * @description 目前盘数
     */
    tennisCurrentSet?: number;
    /** @description 網球比賽主場小節比分 */
    tennisHomeGameScore?: number[];
    /** @description 主队目前局数比分 */
    tennisHomePointScore?: string;
    /**
     * Format: int32
     * @description 玩法总数量
     * @example 52
     */
    totalBetTypeNumber: number;
    /** @description 0,1 */
    tothirdparty?: string;
    /** @description 排球比賽小節比分 */
    volleyBallLiveScore?: definitions["VolleyBallLiveScore"];
  };
  /**
   * SabaMatchRsp
   * @description 比赛详情信息MODEL
   */
  SabaMatchRsp: {
    /**
     * Format: int32
     * @description 客队ID
     * @example 13111541
     */
    awayId?: number;
    /** @description 客队logo */
    awayLogo?: string;
    /**
     * @description 客队名称 [required = true]
     * @example Tromso
     */
    awayName: string;
    /**
     * @description dwanbyte视频开关 -1 关闭， 1开启 [required = true]
     * @example 1
     */
    dawnbyteStreamViewFlag: string;
    /**
     * @description 疾风 视频URL
     * @example http://dwanbyteview.com/TKSDFR-WEF8591
     */
    dawnbyteVideoUrl?: string;
    /**
     * @description 疾风 视频清單
     * @example 返回Json格式
     */
    dawnbyteVideoUrlList?: string;
    /**
     * @description 赛事状态running/closed/postponed/deleted   [required = true]
     * @example running
     */
    eventStatus: string;
    /**
     * Format: int32
     * @description 赛事有多少节
     */
    gameSession?: number;
    /**
     * Format: date-time
     * @description 开赛时间 [required = true]
     */
    globalShowTime: string;
    /**
     * Format: int32
     * @description 主队ID
     * @example 13111541
     */
    homeId?: number;
    /** @description 主队logo */
    homeLogo?: string;
    /**
     * @description 主队名称 [required = true]
     * @example Molde
     */
    homeName: string;
    /** @description 目前赛事时间 适用足球(1)/篮球(2)/美式足球(3)/冰上曲棍球(4) */
    inPlayTime?: string;
    /**
     * @description 目前比赛进行时间
     * @example 00:21:00
     */
    inPlayTime2: definitions["LocalTime"];
    /**
     * @description 联赛ID [required = true]
     * @example 5445186
     */
    leagueId: string;
    /** @description 联赛Logo */
    leagueLogo?: string;
    /**
     * @description 联队名称 [required = true]
     * @example ARGENTINA LIGA PROFESIONAL
     */
    leagueName: string;
    /**
     * Format: int32
     * @description 客场滚球分数 [required = true]
     * @example 230
     */
    liveAwayScore: number;
    /**
     * Format: int32
     * @description 主场滚球分数 [required = true]
     * @example 131
     */
    liveHomeScore: number;
    /**
     * Format: int32
     * @description 目前比赛进行到第几节
     * @example 1
     */
    livePeriod: number;
    /**
     * Format: date
     * @description 比赛日期 [required = true]
     * @example 2022-12-01 [required = true]
     */
    matchDate: string;
    /**
     * @description 比赛ID [required = true]
     * @example 4545412121
     */
    matchId: string;
    /**
     * @description 比赛时间 [required = true]
     * @example 23:00:00
     */
    matchTime: definitions["LocalTime"];
    /** @description 排期中比赛状态：0:inplay (eventStatus=running, 比赛已经开始), 1:running (eventStatus=running，比赛还没开始) */
    runningStatus?: string;
    /**
     * @description saba视频开关 -1 关闭， 1开启 [required = true]
     * @example 1
     */
    sabaStreamViewFlag: string;
    /**
     * @description SABA 视频URL
     * @example http://sabayurl.com/TKSDFR-WEF8591
     */
    sabaVideoUrl?: string;
    /**
     * Format: int32
     * @description 排序
     */
    sort?: number;
    /**
     * @description 体育类型ID [required = true]
     * @example 1
     */
    sportTypeId: string;
    /**
     * @description 体育类型名称 [required = true]
     * @example football [required = true]
     */
    sportTypeName: string;
    /**
     * Format: int32
     * @description 视频来源 1:Dwanbyte 2:SABA 3:both, 如果null 是没有视频
     * @example 2
     */
    streamSource?: number;
    /**
     * Format: int32
     * @description 玩法总数量
     * @example 52
     */
    totalBetTypeNumber: number;
  };
  /** SabaPlaceParlayBetRsp */
  SabaPlaceParlayBetRsp: {
    /**
     * Format: int32
     * @description 下注状态
     */
    bet_status?: number;
    /** Format: int32 */
    code?: number;
    /** @description 串关资料列 */
    current_combos?: definitions["CurrentCombosBean"][];
    /**
     * Format: int64
     * @description Lucky parlay transaction ID
     */
    lucky_trans_id?: number;
    /**
     * Format: double
     * @description 最大投注限额
     */
    max_bet?: number;
    /**
     * Format: double
     * @description 最小投注限额
     */
    min_bet?: number;
    msg?: string;
    /**
     * Format: int32
     * @description 串关下注等待秒数
     */
    parlay_bet_accept_sec?: number;
    /** @description 串关下注状态 */
    parlay_ticket_status?: string;
    /** @description 串关盘口与赔率资料列 */
    price_info?: definitions["PriceInfoBean"][];
    /** @description 单注注单资料列 */
    single_tickets?: definitions["SingleTicket"][];
    /**
     * Format: int64
     * @description System parlay transaction ID
     */
    sys_trans_id?: number;
    /** @description 总下注额 */
    total_stake?: number;
    /**
     * Format: int64
     * @description 沙巴注单号码
     */
    trans_id?: number;
  };
  /**
   * SabaSelectionRsp
   * @description 玩法MODEL
   */
  SabaSelectionRsp: {
    /**
     * @description 不同odds赔率  [required = true]
     * @example 10.2
     */
    allPrice?: definitions["SabaAllPriceRsp"];
    decimalPrice?: number;
    hongKongPrice?: number;
    /**
     * @description 请参考附件” 投注类型与选项  [required = true]
     * @example 1
     */
    key?: string;
    /**
     * @description KEY对应的英文  [required = true]
     * @example 1
     */
    keyEn?: string;
    /** Format: int32 */
    oddRange?: number;
    /**
     * Format: double
     * @description 球头
     * @example 7.5
     */
    point?: number;
    /**
     * Format: double
     * @description 适用于 bettype = 646, Point =
     * Point2 = OU.
     * 其余投注类型返回 null
     */
    point2?: number;
    /**
     * @description 赔率  [required = true]
     * @example 10.2
     */
    price?: string;
  };
  /** SingleComboMarketDetail */
  SingleComboMarketDetail: {
    /**
     * @description 请参考附件” 投注类型与选项  [required = true]
     * @example 1
     */
    key: string;
    /**
     * @description 盘口ID
     * @example 4512455
     */
    marketId: string;
    /**
     * @description 比赛ID
     * @example 64514847
     */
    matchId: string;
    /**
     * @description 盘口
     * @example 00001
     */
    oddsType: string;
    /**
     * @description 体育项目Id
     * @example 43
     */
    sportTypeId: string;
  };
  /**
   * SingleMarketSelectionRsp
   * @description 单个盘口MODEL
   */
  SingleMarketSelectionRsp: {
    /**
     * @description 不同odds赔率  [required = true]
     * @example 10.2
     */
    allPrice?: definitions["SabaAllPriceRsp"];
    decimalPrice?: number;
    hongKongPrice?: number;
    /** @description 目前赛事时间 适用足球(1)/篮球(2)/美式足球(3)/冰上曲棍球(4) */
    inPlayTime?: string;
    /**
     * @description 目前比赛进行时间
     * @example 00:21:00
     */
    inPlayTime2: definitions["LocalTime"];
    /**
     * @description 请参考附件” 投注类型与选项  [required = true]
     * @example 1
     */
    key?: string;
    /**
     * @description KEY对应的英文  [required = true]
     * @example 1
     */
    keyEn?: string;
    /**
     * Format: int32
     * @description 目前比赛进行到第几节
     * @example 1
     */
    livePeriod: number;
    /**
     * @description running 盘口开启且可下注 suspend 盘口赔率仍开启但无法下注 closePrice 盘口赔率关闭且无法下注 closed 盘口关闭且无法下注 [required = true]
     * @example running
     */
    marketStatus: string;
    /**
     * @description 最大投注额
     * @example 10000
     */
    maxBet?: string;
    /**
     * @description 最小投注额
     * @example 50
     */
    minBet?: string;
    /** Format: int32 */
    oddRange?: number;
    /**
     * Format: double
     * @description 球头
     * @example 7.5
     */
    point?: number;
    /**
     * Format: double
     * @description 适用于 bettype = 646, Point =
     * Point2 = OU.
     * 其余投注类型返回 null
     */
    point2?: number;
    /**
     * @description 赔率  [required = true]
     * @example 10.2
     */
    price?: string;
    /** @description 排期中比赛状态：0:inplay (eventStatus=running, 比赛已经开始), 1:running (eventStatus=running，比赛还没开始) */
    runningStatus?: string;
  };
  /** SingleTicket */
  SingleTicket: {
    /**
     * Format: double
     * @description 最大投注限额
     */
    max_bet?: number;
    /**
     * Format: double
     * @description 最小投注限额
     */
    min_bet?: number;
    /**
     * Format: double
     * @description 赔率
     */
    price?: number;
    /** @description 下注金额 */
    stake?: number;
    /** @description 注单狀態 */
    ticket_status?: string;
    /**
     * Format: int64
     * @description 单注注单号
     */
    trans_id?: number;
  };
  /** SiteInfoReq */
  SiteInfoReq: {
    /**
     * @description 动态表单键 英文逗号隔开
     * @example KEY_TEST_01 , DEPOSIT_AUTO_APPROVE_SWITCH
     */
    bizCode?: string;
    /**
     * @description 常量键
     * @example KEY_TEST_01 , DEPOSIT_AUTO_APPROVE_SWITCH
     */
    key?: string;
  };
  /** SportNbaPlayoffLiveRsp */
  SportNbaPlayoffLiveRsp: {
    /** @description 直播地址 live url */
    liveUrl?: string;
    /** @description 比赛名 match name */
    matchName?: string;
    /** @description 主队队名 home team name */
    teamNameFirst?: string;
    /** @description 客队队名 road team name */
    teamNameSecond?: string;
  };
  /** SportNbaPlayoffMatchRsp */
  SportNbaPlayoffMatchRsp: {
    /** @description 跳转地址, GO TO BET link, saba uri */
    betUrl?: string;
    /** @description group ( 組別) */
    group?: string;
    /** @description 跳转参数, GO TO BET link, inGame param */
    inGameParam?: string;
    /** @description 开赛时间 match start time (format: yyyy-MM-dd HH:mm:ss) */
    matchDate?: string;
    /** @description 比分 score (xxx:xxx) */
    score?: string;
    /** @description 主队logo地址 home team logo icon */
    teamIconFirst?: string;
    /** @description 客队logo地址 road team logo icon */
    teamIconSecond?: string;
    /** @description 主队名称 home team name */
    teamNameFirst?: string;
    /** @description 客队名称 road team name */
    teamNameSecond?: string;
    /**
     * Format: int32
     * @description 输赢状态 0: 未完赛，1：主队赢，2：客队赢 ; win status, 0: not end, 1: home win, 2: road win
     */
    winStatus?: number;
  };
  /** SportNbaPlayoffReq */
  SportNbaPlayoffReq: {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
    /** @description 标签页所选日期，格式：yyyy-MM-dd（默认服务器当天）; selected date tab, format: yyyy-MM-dd (default server current day) */
    searchDate?: string;
  };
  /** SportNbaPlayoffTeamRsp */
  SportNbaPlayoffTeamRsp: {
    /**
     * Format: int32
     * @description conference score ( 4进2比分)
     */
    confScore?: number;
    /**
     * Format: int32
     * @description conference semifinal score ( 8进4比分)
     */
    confSemiScore?: number;
    /**
     * Format: int32
     * @description final score ( 总决赛比分)
     */
    finalScore?: number;
    /**
     * Format: int64
     * @description id 主键自增ID
     */
    id?: number;
    /**
     * Format: int32
     * @description first round score (首轮比分)
     */
    roundScore?: number;
    /**
     * Format: int32
     * @description serial num (序号)
     */
    serialNum?: number;
    /** @description team icon (队伍图标) */
    teamIcon?: string;
    /** @description team name (队伍名称) */
    teamName?: string;
  };
  /**
   * SportTypeGamesRsp
   * @description 首页体育类型和比赛场次MODEL
   */
  SportTypeGamesRsp: {
    /**
     * Format: int32
     * @description 明日之後的比賽  [required = true]
     * @example 57
     */
    afterTomorrow: number;
    /**
     * Format: int32
     * @description 明日之後的比賽
     * @example 57
     */
    afterTomorrowCombo: number;
    /**
     * Format: int32
     * @description 次日及之后的比赛  [required = true]
     * @example 57
     */
    earlyGames: number;
    /**
     * Format: int32
     * @description 进行中的比赛 [required = true]
     * @example 57
     */
    inPayGames: number;
    /**
     * Format: int32
     * @description 进行中的比赛
     * @example 57
     */
    inPayGamesCombo: number;
    /**
     * @description 体育ID [required = true]
     * @example 1
     */
    sportTypeId: string;
    /**
     * @description 体育名称 [required = true]
     * @example football
     */
    sportTypeName: string;
    /**
     * Format: int32
     * @description 今日及明日的比賽  [required = true]
     * @example 57
     */
    todayAndTomorrow: number;
    /**
     * Format: int32
     * @description 今日及明日的比賽
     * @example 57
     */
    todayAndTomorrowCombo: number;
    /**
     * Format: int32
     * @description 当天的的比赛，不包含当天进行中的比赛 [required = true]
     * @example 57
     */
    todayGames: number;
    /**
     * Format: int32
     * @description 总计比赛场次 [required = true]
     * @example 57
     */
    totalGames: number;
  };
  /** TableDetailRsp */
  TableDetailRsp: {
    /** @description 地址列表 */
    addr?: definitions["地址信息"][];
    /** @description bingopool 奖池 eg. 12800 */
    bingopool?: number;
    /**
     * Format: int32
     * @description 房间状态 0 开启 2 维护 eg. 0
     */
    flag?: number;
    /** @description 游戏描述 */
    gameDesc?: string;
    /** @description 游戏直播图片 */
    gameImageLive?: string;
    /** @description 游戏房间标题 */
    gameRoom?: string;
    /** @description 游戏类型：TBGO(传统 bingo),ABGO ,FBGO */
    gmtype?: string;
    /** @description 是否维护  1：true 0:false */
    isMaintain?: boolean;
    /** @description jackpot展示文字 */
    jackPotShow?: string;
    /** @description jackpot 奖池 eg. 51736 */
    jackpool?: number;
    /** @description 维护展示内容 */
    maintenancePeriod?: string;
    /**
     * Format: int32
     * @description 桌台人数 eg. 10
     */
    players?: number;
    /** @description bingo游戏的在线人数总和 */
    totalPlaers?: string;
    /** @description 总奖池 eg. 64536 */
    totalpool?: number;
    /** @description 桌台号 eg. BG01 */
    vid?: string;
    /** @description jackpot 奖池 eg. 12800 */
    wtapool?: number;
  };
  /** TableRankRsp */
  TableRankRsp: {
    /** @description 金额 eg. 3157759 */
    amount?: number;
    /** @description 游戏类型：TBGO(传统 bingo),ABGO ,FBGO */
    gmtype?: string;
    /** @description 头像 eg. default2.png */
    headShot?: string;
    /** @description 用户名 eg. yvkzm589 */
    loginname?: string;
    /**
     * Format: int32
     * @description 排行 eg. 1
     */
    rank?: number;
    /**
     * Format: int32
     * @description 状态 0 离线 1 在线 eg. 1
     */
    status?: number;
  };
  /** TennisBallLiveScore */
  TennisBallLiveScore: {
    /** @description 網球比賽客場小節比分 */
    tennisAwayGameScore?: number[];
    /** @description 客队目前局数比分 */
    tennisAwayPointScore?: string;
    /**
     * Format: int32
     * @description 客隊比分總和
     */
    tennisAwayScoreSum?: number;
    /**
     * Format: int32
     * @description 目前发球队伍(1=主队 2=客队)
     */
    tennisCurrentServe?: number;
    /**
     * Format: int32
     * @description 目前盘数
     */
    tennisCurrentSet?: number;
    /** @description 網球比賽主場小節比分 */
    tennisHomeGameScore?: number[];
    /** @description 主队目前局数比分 */
    tennisHomePointScore?: string;
    /**
     * Format: int32
     * @description 主隊比分總和
     */
    tennisHomeScoreSum?: number;
  };
  /** Type */
  Type: {
    typeName?: string;
  };
  /**
   * UpdateBobetSwitchReq
   * @description 更新用户盘口类型MODEL
   */
  UpdateBobetSwitchReq: {
    /**
     * @description bobetSwitch
     * @example 1
     */
    bobetSwitch?: string;
    /**
     * @description 鉴权
     * @example 1
     */
    secret?: string;
  };
  /**
   * UpdateOddsTypeReq
   * @description 更新用户盘口类型MODEL
   */
  UpdateOddsTypeReq: {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * Format: int32
     * @description 盘口类型：3 欧洲盘，2 香港盘
     * @example 1
     */
    oddsType?: number;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
  };
  /** UserGameInfo */
  UserGameInfo: {
    /**
     * @description 玩家喜欢记录
     * @example 玩家喜欢记录
     */
    gameLikes?: definitions["GameLikeRsp"][];
    /**
     * @description 玩家玩过记录
     * @example 玩家玩过记录
     */
    gameLogs?: definitions["GameLogRsp"][];
  };
  /** UserGameInfoReq */
  UserGameInfoReq: {
    /**
     * @description 游戏大类,逗号分开
     * @example bingo,slot,poker
     */
    gameKind?: string;
    /**
     * @description 玩家用户名
     * @example abc
     */
    loginName?: string;
  };
  /** UserPlayLogReq */
  UserPlayLogReq: {
    game?: definitions["GameEntity"];
    loginName?: string;
    productId?: string;
  };
  /** VolleyBallLiveScore */
  VolleyBallLiveScore: {
    /** Format: int32 */
    a1S?: number;
    /** Format: int32 */
    a2S?: number;
    /** Format: int32 */
    a3S?: number;
    /** Format: int32 */
    a4S?: number;
    /** Format: int32 */
    a5S?: number;
    /** Format: int32 */
    aS?: number;
    /**
     * Format: int32
     * @description 目前客队总比分
     */
    apt?: number;
    /** Format: int32 */
    h1S?: number;
    /** Format: int32 */
    h2S?: number;
    /** Format: int32 */
    h3S?: number;
    /** Format: int32 */
    h4S?: number;
    /** Format: int32 */
    h5S?: number;
    /** Format: int32 */
    hS?: number;
    /**
     * Format: int32
     * @description 目前主队总比分
     */
    hpt?: number;
    /**
     * Format: int32
     * @description 球员受伤
     */
    inj?: number;
    /**
     * Format: int32
     * @description 目前进行的局数
     */
    llp?: number;
    /**
     * Format: int32
     * @description 目前发球队伍
     */
    ser?: number;
  };
  /** WinnerRankRsp */
  WinnerRankRsp: {
    /** @description 金额 eg. 3157759 */
    amount?: number;
    /** @description 时间 eg. 2022-03-04 05:31:00 */
    billtime?: string;
    /**
     * Format: int32
     * @description 0 审核中  1 审核通过
     */
    flag?: number;
    /** @description 游戏类型：TBGO(传统 bingo),ABGO ,FBGO */
    gametype?: string;
    /** @description 头像 eg. default2.png */
    headShot?: string;
    /** @description 用户名 eg. yvkzm589 */
    loginname?: string;
    /** @description 昵称 eg. yvkzm589 */
    nickName?: string;
    /**
     * Format: int32
     * @description 类型 1是 jackpot 2 是bingo
     */
    playtype?: number;
    /**
     * Format: int32
     * @description 排行 eg. 1
     */
    rank?: number;
    /**
     * Format: int32
     * @description 类型 1是 jackpot 5 是bingo
     */
    type?: number;
    /** @description 用户名 eg. yvkzm589 */
    username?: string;
  };
  /** 关注主播 */
  关注主播: {
    /**
     * @description 主播ID
     * @example 1234343654
     */
    anchorId?: string;
    /**
     * @description 关注时间 yyyy-MM-dd hh24:mi:ss
     * @example 2023-12-30 23:00:00
     */
    followTime?: string;
    /**
     * @description 头像
     * @example http://aa.com/bb.png
     */
    headImg?: string;
    /**
     * @description 最近一次开播时间 yyyy-MM-dd hh24:mi:ss
     * @example 2023-12-30 23:00:00
     */
    lastLiveTime?: string;
    /**
     * Format: int32
     * @description 在播状态 live status [0: off live, 1: live]
     * @example 1
     */
    liveStatus?: number;
  };
  /** 关注主播0 */
  关注主播0: {
    /**
     * @description 主播ID
     * @example 1234343654
     */
    anchorId?: string;
    /**
     * Format: int32
     * @description 是否关注[0:取关，1:关注]
     * @example 0
     */
    followFlag?: number;
    /**
     * @description 关注时间 yyyy-MM-dd hh24:mi:ss
     * @example 2023-12-30 23:00:00
     */
    followTime?: string;
    /**
     * @description 头像
     * @example http://aa.com/bb.png
     */
    headImg?: string;
    /**
     * @description 最近一次开播时间 yyyy-MM-dd hh24:mi:ss
     * @example 2023-12-30 23:00:00
     */
    lastLiveTime?: string;
    /**
     * Format: int32
     * @description 在播状态 live status [0: off live, 1: live]
     * @example 1
     */
    liveStatus?: number;
    /**
     * @description 玩家账号
     * @example bingoplusxxxx
     */
    userName?: string;
  };
  /** 关注主播列表 */
  关注主播列表: {
    /** @description 关注主播列表 */
    follows?: definitions["关注主播"][];
    /**
     * Format: int64
     * @description 最新关注主播信息时间戳
     */
    timestamp?: number;
  };
  /** 在播主播 */
  在播主播: {
    /**
     * @description 主播ID
     * @example 123123214
     */
    anchorId?: string;
    /**
     * Format: int32
     * @description 游戏类型[0: mega]
     * @example 0
     */
    gameType?: number;
    /**
     * @description 头像地址
     * @example http://xxx.com/yyy.png
     */
    headImg?: string;
    /**
     * @description 直播间ID
     * @example 123434132432
     */
    liveRoomId?: string;
  };
  /** 在播主播0 */
  在播主播0: {
    /**
     * @description 主播ID
     * @example 123123214
     */
    anchorId?: string;
    /**
     * Format: int32
     * @description 游戏类型[0: mega]
     * @example 0
     */
    gameType?: number;
    /**
     * @description 头像地址
     * @example http://xxx.com/yyy.png
     */
    headImg?: string;
    /**
     * @description 直播间ID
     * @example 123434132432
     */
    liveRoomId?: string;
    /**
     * Format: int32
     * @description 是否开播[0：关播， 1：开播]
     * @example 0
     */
    liveStatus?: number;
  };
  /** 在播主播列表 */
  在播主播列表: {
    /** @description 关注主播信息 */
    followStreamerRsp?: definitions["关注主播列表"];
    /** @description 是否需要重新加载 */
    needReload?: boolean;
  };
  /** 地址信息 */
  地址信息: {
    /** @description 地址 eg. https://g01.dfjinbo.com/bg01/a-g2 */
    addr?: string;
    /** @description 名称 eg. p_main */
    name?: string;
  };
  /** 投注前檢查接口請求Model */
  投注前檢查接口請求Model: {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /** @description 盤口資訊 */
    prepare?: definitions["ParlayTicketsPrepare"];
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
    /** @description 厂商标识符 */
    vendor_id?: string;
    /** @description 厂商会员标识符 */
    vendor_member_id?: string;
  };
  /** 投注前檢查接口返回Model */
  投注前檢查接口返回Model: {
    /** @description 串關清單 */
    combos?: definitions["CombosBean"][];
    /** @description 厂商标识符 */
    price_info?: definitions["GetParlayTicketsPriceInfo"][];
  };
  /** 查询串關盘口信息MODEL */
  查询串關盘口信息MODEL: {
    /** @description 盤口資料 */
    comboMarketList: definitions["SingleComboMarketDetail"][];
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
  };
  /** 查询单个比赛下所有盘口数据 */
  查询单个比赛下所有盘口数据: {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 联赛Id
     * @example 54125745413
     */
    leagueId: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * @description 0:all, 1: FullTime (全场),2: Half (半场),8: Quarter (节),90: Match, 91: set, 93:popular 94: map, 99:other
     * @example 1
     */
    matchCategory: string;
    /**
     * Format: int32
     * @description 比赛Id
     * @example 239873441
     */
    matchId: number;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
    /**
     * @description SPORT TYPE Id
     * @example 1
     */
    sportTypeId: string;
  };
  /** 查询单个盘口信息MODEL */
  查询单个盘口信息MODEL: {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 投注类型
     * @example o
     */
    key: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * @description 盘口ID
     * @example 4512455
     */
    marketId: string;
    /**
     * Format: int32
     * @description 比赛ID
     * @example 64514847
     */
    matchId: number;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
    /**
     * @description 体育类型ID
     * @example 1
     */
    sportTypeId: string;
  };
  /** 查询盘口信息MODEL */
  查询盘口信息MODEL: {
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    customerId?: string;
    /**
     * @description 登录名[登录态下或登录时必须传入]
     * @example kslot777
     */
    loginName?: string;
    /**
     * Format: int32
     * @description 1 in-play, 2 today, 3 early
     * @example 1
     */
    matchDateType: number;
    /**
     * @description 产品编号[必填]
     * @example C66
     */
    productId: string;
    /**
     * @description 体育类型id
     * @example football
     */
    sportTypeId: string;
  };
}

export interface operations {
  /** 查询模特投票排行 */
  modelInfoUsingPOST_7: {
    parameters: {
      body: {
        /** req */
        req: definitions["QueryMissionStatusReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«Set«object»»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  /** test */
  testUsingPOST_7: {
    parameters: {
      body: {
        /** req */
        req: definitions["QueryMissionStatusReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«Set«object»»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  /** 返回聊天内容 */
  bingoChatContentUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["ChatReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp«Chat»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 用户任务状况和可用票数 */
  missionStatusUsingPOST_7: {
    parameters: {
      body: {
        /** req */
        req: definitions["BaseReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  /** 关注取关通知 */
  followRemindUsingPOST: {
    parameters: {
      body: {
        /** followReq */
        followReq: definitions["关注主播0"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取最新关注主播 */
  getFollowStreamerUsingPOST: {
    parameters: {
      body: {
        /** streamerInfoReq */
        streamerInfoReq: definitions["Request params for streamer"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«在播主播列表»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取最新关注主播 */
  getLiveStreamerUsingPOST: {
    parameters: {
      body: {
        /** streamerInfoReq */
        streamerInfoReq: definitions["Request params for streamer"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«在播主播列表»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 开关播通知 */
  liveRemindUsingPOST: {
    parameters: {
      body: {
        /** streamerReq */
        streamerReq: definitions["在播主播0"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 取消喜欢游戏 */
  cancelLikeGameUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["GameReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  charityEvensRequestUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["CharityEventsReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  charityEvensVoteUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["CharityEventsReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 1.1 查询用户聊天室基础信息 */
  queryChatInfoUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["ChatRoomReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«ChatInfoResp»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 前端常量接口 */
  siteInfoUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["SiteInfoReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp«JSONObject»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 前端弹窗列表接口 */
  windowListUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["BaseReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp«JSONObject»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取color game 在线人数和奖金池 */
  getColorGameStatisticsUsingPOST_7: {
    parameters: {
      body: {
        /** gameReq */
        gameReq: definitions["InGameReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«BingoInfoRsp»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  /** 获取Livemonte 在线人数和奖金池 */
  getLiveMonteStatisticsUsingPOST_7: {
    parameters: {
      body: {
        /** gameReq */
        gameReq: definitions["InGameReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«BingoInfoRsp»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  /** 获取Livepulaputi 在线人数和奖金池 */
  getPulaPutiStatisticsUsingPOST_7: {
    parameters: {
      body: {
        /** gameReq */
        gameReq: definitions["InGameReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«BingoInfoRsp»"];
      };
      /** No Content */
      204: never;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
    };
  };
  /** 进厅统计-查询 */
  gameOnlineStatQueryUsingPOST: {
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** GLI环境需求，新增环境常量开关 */
  gameZoneSwitchUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["BaseReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** getHomeGameData 首页游戏桌台数据 */
  homeGameDataUsingPOST: {
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** getBingoInfo 旧接口,为兼容app旧版本保留一段时间 */
  getBingoInfoUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["BingoInfoReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp«BingoInfoRsp»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 服务可用性检测 */
  healthUsingGET: {
    responses: {
      /** OK */
      200: {
        schema: definitions["Mono«string»"];
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 进厅统计 */
  inGameReportUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["GameReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 点击喜欢游戏 */
  likeGameUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["GameReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** bingoNight jackPot 中奖数据 */
  getJackPotDataUsingPOST: {
    responses: {
      /** OK */
      200: {
        schema: definitions["Response"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** getBingoNightWinner bingoNight 中奖数据 */
  getBingoNightWinnerUsingPOST: {
    responses: {
      /** OK */
      200: {
        schema: definitions["Response"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 动态表单notice接口 */
  noticeInfoUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["BaseReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询绑定玩家的游戏数据 */
  queryGameRankingUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["GameRankingReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp«JSONArray»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询玩家you may also like的游戏类型 */
  queryUserGameAlsoLikeUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["UserGameInfoReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询绑定玩家的游戏数据 */
  queryUserGameInfoUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["UserGameInfoReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp«UserGameInfo»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询绑定玩家的游戏数据 */
  queryUserGameInfoAppletUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["UserGameInfoReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp«UserGameInfo»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询绑定玩家的游戏数据 */
  queryUserGameInfoV2UsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["UserGameInfoReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp«UserGameInfo»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 文章统计功能 */
  articleStatisticsUsingPOST: {
    parameters: {
      body: {
        /** statisticsReq */
        statisticsReq: definitions["ArticleStatisticsReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** bobet推流/斷流通知 */
  bobetStreamingNotificationUsingPOST: {
    parameters: {
      body: {
        /** bobetStreamingNotificationReq */
        bobetStreamingNotificationReq: definitions["BobetStreamingNotificationReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** getBobet开关 */
  getBobetSwitchUsingPOST: {
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«string»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** protoBuf开关 */
  protoBufSwitchUsingPOST: {
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 交叉營銷首頁資料 */
  queryCrossMarketingMatchUsingPOST: {
    parameters: {
      body: {
        /** listStr */
        listStr: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SabaMarketDetailListRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取某项类别下多个赛事 */
  queryMatchesBySportTypeUsingPOST_1: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询盘口信息MODEL"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SabaMatchBySportRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取SP、疾风、bo的正在进行中的视频 */
  queryMatchesLiveUsingPOST_1: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询盘口信息MODEL"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SabaMatchBySportLiveRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询SABA余额 */
  querySabaBalanceUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["BaseReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«GiGcBalanceRsp»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取投注记录List */
  querySabaBetRecordsUsingPOST: {
    parameters: {
      body: {
        /** reqs */
        reqs: definitions["SABA投注记录请求"][];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SABA投注记录响应MODEL»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取投注记录 */
  querySabaBetRecordUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["SABA投注记录请求MODEL"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«PageModel«SABA投注记录响应MODEL»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询单个盘口中key详情 */
  querySelectionDetailUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询单个盘口信息MODEL"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«SingleMarketSelectionRsp»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 新版查询单个盘口中key详情 */
  querySelectionDetailV2UsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询单个盘口信息MODEL"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«SingleMarketSelectionRsp»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询单个比赛下所有盘口数据 */
  querySingleMatchMarketListUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询单个比赛下所有盘口数据"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«SabaMarketDetailListRsp»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 新版查询单个比赛下所有盘口数据 */
  querySingleMatchMarketListV2UsingPOST_1: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询单个比赛下所有盘口数据"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«SabaMarketDetailListRsp»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 新版查询单个比赛下所有盘口数据 */
  querySingleMatchMarketListV2ProtoBufUsingPOST_1: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询单个比赛下所有盘口数据"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: string;
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取球类IN-PLAY和TODAY比赛场次数量 */
  querySportGamesUsingPOST_1: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询单个比赛下所有盘口数据"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SportTypeGamesRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 首页all sport */
  querySportTypeInfoUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["BaseReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SabaFrontMenuRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询首页top2比赛数据 */
  queryTop2MatchUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["BaseReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SabaMarketDetailListRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询首页top5比赛数据 */
  queryTop5MatchUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["BaseReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SabaMatchRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** SABA投注下单 */
  sabaDoPlaceBetUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["SabaDoPlaceBetReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«GiGcDoPlaceBetRsp»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** bobet开关 */
  updateBobetSwitchUsingPOST: {
    parameters: {
      body: {
        /** updateBobetSwitchReq */
        updateBobetSwitchReq: definitions["UpdateBobetSwitchReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 修改用户盘口类型 */
  updateCustomerOddsTypeUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["UpdateOddsTypeReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** PBA視頻流比賽ID修改 */
  updatePbaStreamingMatchIdUsingPOST: {
    parameters: {
      body: {
        /** pbaStreamingMatchIdUpdateReq */
        pbaStreamingMatchIdUpdateReq: definitions["PbaStreamingMatchIdUpdateReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«boolean»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** combo下注接口 */
  comboBetToSabaUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["SABA投注MODEL"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["CommonResponse«GiGcResponse«SabaPlaceParlayBetRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询多个盘口中key详情 */
  queryCartComboDetailUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询串關盘口信息MODEL"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["CommonResponse«List«SabaMarketRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 查询多个combo盘口中key详情 */
  queryComboSelectionDetailUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["投注前檢查接口請求Model"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["CommonResponse«GiGcResponse«投注前檢查接口返回Model»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取某项类别下多个赛事 */
  queryMatchesBySportTypeUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询盘口信息MODEL"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["CommonResponse«List«SabaMatchBySportRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取SP、疾风、bo的正在进行中的视频 */
  queryMatchesLiveUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询盘口信息MODEL"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["CommonResponse«List«SabaMatchBySportLiveRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取Combo投注记录 */
  querySabaComboBetRecordUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["SABA投注记录请求MODEL"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["CommonResponse«PageModel«SABACombo投注记录响应MODEL»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 新版查询单个比赛下所有盘口数据 */
  querySingleMatchMarketListV2UsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询单个比赛下所有盘口数据"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["CommonResponse«SabaMarketDetailListRsp»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 新版查询单个比赛下所有盘口数据 */
  querySingleMatchMarketListV2ProtoBufUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询单个比赛下所有盘口数据"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: string;
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取球类IN-PLAY和TODAY比赛场次数量 */
  querySportGamesUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["查询单个比赛下所有盘口数据"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["CommonResponse«List«SportTypeGamesRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 全站维护接口 */
  siteMaintenanceUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["BaseReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取正在直播的比赛 get the live match for today */
  queryLiveMatchesUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["BaseReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SportNbaPlayoffLiveRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 根据日期获取比赛 get the matches for search day */
  queryMatchesUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["SportNbaPlayoffReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SportNbaPlayoffMatchRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取所有季后赛队伍 all playoffs teams */
  teamsUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["SportNbaPlayoffReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SportNbaPlayoffTeamRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取今天的比赛 get the matches for today */
  queryTodayMatchesUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["SportNbaPlayoffReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SportNbaPlayoffMatchRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取正在直播的比赛 get the live match for today */
  queryLiveMatchesUsingPOST_1: {
    parameters: {
      body: {
        /** req */
        req: definitions["BaseReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SportNbaPlayoffLiveRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 根据日期获取比赛 get the matches for search day */
  queryMatchesUsingPOST_1: {
    parameters: {
      body: {
        /** req */
        req: definitions["SportNbaPlayoffReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SportNbaPlayoffMatchRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取所有季后赛队伍 all playoffs teams */
  teamsUsingPOST_1: {
    parameters: {
      body: {
        /** req */
        req: definitions["SportNbaPlayoffReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SportNbaPlayoffTeamRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 获取今天的比赛 get the matches for today */
  queryTodayMatchesUsingPOST_1: {
    parameters: {
      body: {
        /** req */
        req: definitions["SportNbaPlayoffReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["Response«List«SportNbaPlayoffMatchRsp»»"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /** 更新玩家玩过的缓存游戏数据 */
  updatePlayLogInfoUsingPOST: {
    parameters: {
      body: {
        /** req */
        req: definitions["UserPlayLogReq"];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["BaseRsp"];
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
}

export interface external {}
